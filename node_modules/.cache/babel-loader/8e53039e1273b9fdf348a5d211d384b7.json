{"ast":null,"code":"const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json'; // const collectionUrl = `${baseUrl}/jovial?key=${apiKey}`;\n// const index = () => {\n//     return fetch(collectionUrl)\n//         .then(response=>response.json());\n// }\n\nconst handleAPIErrors = response => {};\n\nfunction prepWord(word) {\n  return encodeURIComponent(word);\n}\n\nvar utils = {\n  prepWord: prepWord\n};\n\nfunction getQueryParams(params) {\n  params[\"api_key\"] = apiKey; //     var pairs = Object.keys(params).map(function(key){\n  //         var result = key + \"=\" + params[key];\n  //         return result;\n  //     }) \n  //     var urlParams = pairs.reduce(function(prev,next){\n  //         return prev + \"&\" + next\n  //     })  \n  // return urlParams\n}\n\nfunction prepareUrl(word, params) {\n  var url = baseUrl + \"/\" + utils.prepWord(word) + \"?\" + getQueryParams(params);\n  return url;\n} //rewrite\n\n\nfunction callWord(word, params) {\n  var url = prepareUrl(word, params);\n  return fetch(url).then(response => response.json());\n}\n\nfunction getDefinitions(word) {\n  var params = {};\n  return callWord(word, params);\n}\n\nfunction getWordInfo(word) {\n  var meta = {};\n  return fetch([getDefinitions(word)]).then(props.spread(function (definitions) {\n    meta.definitions = definitions;\n    return meta;\n  }));\n} //start\n// function callWord(word, params){\n//     var url = prepareUrl(word, params);\n//     return axios.get(url).then(function(response){\n//       return response.data\n//     })\n//   }\n// function getDefinitions(word){\n//     var params = {}\n//     return callWord(word, params)\n// }\n// function getWordInfo(word){\n//     var meta = {}\n//     return axios.all([getDefinitions(word)]).then(\n//         axios.spread(function(definitions){\n//         meta.definitions = definitions;\n//         return meta\n//         })\n//     )\n// }\n//end\n\n\nconst MerriamAPI = {\n  index // getDefinitions,\n  // getWordInfo\n\n};\nconsole.log(index());\nexport default MerriamAPI;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/services/MerriamAPI.js"],"names":["apiKey","process","env","REACT_APP_MERRIAM_API_KEY","baseUrl","handleAPIErrors","response","prepWord","word","encodeURIComponent","utils","getQueryParams","params","prepareUrl","url","callWord","fetch","then","json","getDefinitions","getWordInfo","meta","props","spread","definitions","MerriamAPI","index","console","log"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA3B;AACA,MAAMC,OAAO,GAAG,iEAAhB,C,CACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAGC,QAAQ,IAAI,CAEnC,CAFD;;AAIA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB;AACnB,SAAOC,kBAAkB,CAACD,IAAD,CAAzB;AACD;;AAEH,IAAIE,KAAK,GAAG;AACRH,EAAAA,QAAQ,EAAEA;AADF,CAAZ;;AAIA,SAASI,cAAT,CAAwBC,MAAxB,EAA+B;AAC3BA,EAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBZ,MAApB,CAD2B,CAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAED,SAASa,UAAT,CAAoBL,IAApB,EAA0BI,MAA1B,EAAiC;AAC7B,MAAIE,GAAG,GAAGV,OAAO,GAAG,GAAV,GAAgBM,KAAK,CAACH,QAAN,CAAeC,IAAf,CAAhB,GAAuC,GAAvC,GAA6CG,cAAc,CAACC,MAAD,CAArE;AACA,SAAOE,GAAP;AACH,C,CAED;;;AACA,SAASC,QAAT,CAAkBP,IAAlB,EAAwBI,MAAxB,EAA+B;AAC3B,MAAIE,GAAG,GAAGD,UAAU,CAACL,IAAD,EAAOI,MAAP,CAApB;AACA,SAAOI,KAAK,CAACF,GAAD,CAAL,CAAWG,IAAX,CAAgBX,QAAQ,IAAIA,QAAQ,CAACY,IAAT,EAA5B,CAAP;AACH;;AAED,SAASC,cAAT,CAAwBX,IAAxB,EAA6B;AACzB,MAAII,MAAM,GAAG,EAAb;AACA,SAAOG,QAAQ,CAACP,IAAD,EAAOI,MAAP,CAAf;AACH;;AAED,SAASQ,WAAT,CAAqBZ,IAArB,EAA0B;AACtB,MAAIa,IAAI,GAAG,EAAX;AACA,SAAOL,KAAK,CAAC,CAACG,cAAc,CAACX,IAAD,CAAf,CAAD,CAAL,CAA8BS,IAA9B,CACHK,KAAK,CAACC,MAAN,CAAa,UAASC,WAAT,EAAqB;AAClCH,IAAAA,IAAI,CAACG,WAAL,GAAmBA,WAAnB;AACA,WAAOH,IAAP;AACC,GAHD,CADG,CAAP;AAMH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMI,UAAU,GAAG;AACfC,EAAAA,KADe,CAEf;AACA;;AAHe,CAAnB;AAKAC,OAAO,CAACC,GAAR,CAAYF,KAAK,EAAjB;AAEA,eAAeD,UAAf","sourcesContent":["const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json';\n// const collectionUrl = `${baseUrl}/jovial?key=${apiKey}`;\n\n// const index = () => {\n//     return fetch(collectionUrl)\n//         .then(response=>response.json());\n// }\n\nconst handleAPIErrors = response => {\n\n}\n\nfunction prepWord(word){\n    return encodeURIComponent(word)\n  }\n  \nvar utils = {\n    prepWord: prepWord,\n}\n\nfunction getQueryParams(params){\n    params[\"api_key\"] = apiKey;\n    //     var pairs = Object.keys(params).map(function(key){\n    //         var result = key + \"=\" + params[key];\n    //         return result;\n    //     }) \n    //     var urlParams = pairs.reduce(function(prev,next){\n    //         return prev + \"&\" + next\n    //     })  \n    // return urlParams\n}\n\nfunction prepareUrl(word, params){\n    var url = baseUrl + \"/\" + utils.prepWord(word) + \"?\" + getQueryParams(params);\n    return url\n}\n\n//rewrite\nfunction callWord(word, params){\n    var url = prepareUrl(word, params);\n    return fetch(url).then(response => response.json());\n}\n\nfunction getDefinitions(word){\n    var params = {}\n    return callWord(word, params)\n}\n\nfunction getWordInfo(word){\n    var meta = {}\n    return fetch([getDefinitions(word)]).then(\n        props.spread(function(definitions){\n        meta.definitions = definitions;\n        return meta\n        })\n    )\n}\n\n//start\n// function callWord(word, params){\n//     var url = prepareUrl(word, params);\n//     return axios.get(url).then(function(response){\n//       return response.data\n//     })\n//   }\n  \n// function getDefinitions(word){\n//     var params = {}\n//     return callWord(word, params)\n// }\n\n// function getWordInfo(word){\n//     var meta = {}\n//     return axios.all([getDefinitions(word)]).then(\n//         axios.spread(function(definitions){\n//         meta.definitions = definitions;\n//         return meta\n//         })\n//     )\n// }\n//end\n\nconst MerriamAPI = {\n    index,\n    // getDefinitions,\n    // getWordInfo\n}\nconsole.log(index());\n\nexport default MerriamAPI;"]},"metadata":{},"sourceType":"module"}