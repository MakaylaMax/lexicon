{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/components/Search/Search.js\";\nimport React, { Component } from 'react';\nimport MerriamAPI from '../../services/MerriamAPI';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      word: '',\n      error: ''\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        word: event.target.value.toLowerCase()\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.search(this.state.word);\n      this.setState({\n        word: ''\n      });\n      this.setState({\n        error: ''\n      });\n    };\n\n    this.search = async word => {\n      try {\n        const data = await MerriamAPI.getWordInfo(word); // console.log(data);\n        //&& word exists \n\n        if (data.length && data[0].fl && data[0].meta.stems && data[0].hwi.prs[0].mw && data[0].shortdef[0]) {\n          // console.log('A HERE')\n          this.props.handleUpdate({\n            word: word,\n            info: data,\n            versions: data[0].meta.stems,\n            shortdef: data[0].shortdef[0],\n            partOfSpeech: data[0].fl,\n            pronunciation: data[0].hwi.prs[0].mw\n          });\n          this.props.setRedirect({\n            path: `/definition/${word}`\n          });\n        } else {\n          // console.log('B HERE')\n          this.setState({\n            error: 'Word Not Found'\n          });\n          console.log(this.state.error);\n        }\n      } catch {\n        this.props.setModal('Offline');\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.word,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, this.state.error))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/components/Search/Search.js"],"names":["React","Component","MerriamAPI","Search","state","word","error","handleChange","event","setState","target","value","toLowerCase","handleSubmit","e","preventDefault","search","data","getWordInfo","length","fl","meta","stems","hwi","prs","mw","shortdef","props","handleUpdate","info","versions","partOfSpeech","pronunciation","setRedirect","path","console","log","setModal","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport MerriamAPI from '../../services/MerriamAPI';\n\nclass Search extends Component {\n\n\n  state = {\n    word:'',\n    error: '',\n  };\n\n\nhandleChange = (event) => {\nthis.setState({word:event.target.value.toLowerCase()});\n}\n\n\nhandleSubmit = (e) => {\n  e.preventDefault();\n  this.search(this.state.word)\n  this.setState({word: ''});\n  this.setState({error: ''});\n\n}\n\n\nsearch = async (word) => {\n\n  try{\n      const data = await MerriamAPI.getWordInfo(word);\n      // console.log(data);\n      //&& word exists \n      if (data.length && data[0].fl && data[0].meta.stems && data[0].hwi.prs[0].mw && data[0].shortdef[0]){\n          // console.log('A HERE')\n          this.props.handleUpdate({\n              word: word,\n              info: data,\n              versions: data[0].meta.stems,\n              shortdef: data[0].shortdef[0],\n              partOfSpeech: data[0].fl,\n              pronunciation: data[0].hwi.prs[0].mw, \n          });\n          this.props.setRedirect({\n              path: `/definition/${word}`,\n          });\n      }\n        else {\n          // console.log('B HERE')\n          this.setState({error: 'Word Not Found'});\n          console.log(this.state.error)\n      }\n  }\n  catch{\n      this.props.setModal('Offline')\n  }\n}\n\n\n\nrender (){\n  return (\n    <div> \n    <form onSubmit={this.handleSubmit}>\n    <div>\n      <br />\n      <div>\n      <input type=\"text\" onChange={this.handleChange} value={this.state.word} />\n      </div>\n      <br />\n      <div>\n      <button className=\"btn btn-secondary\" type=\"submit\">Search</button>\n      </div>\n      <div>\n        {this.state.error}\n      </div>\n    </div>\n    </form>\n    </div>\n  );\n}\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}