{"ast":null,"code":"import React, { Component } from 'react';\n\nclass Redirector extends Component {\n  componentDidUpdate() {\n    console.log('Redirector::componentDidUpdate');\n    const {\n      redirect,\n      location,\n      history,\n      setRedirect\n    } = this.props;\n    const {\n      path\n    } = redirect;\n    if (!path) return;\n\n    if (path !== location.pathname) {\n      history.push({\n        pathname: path\n      }); // console.log('Redirector::performing redirect to', path);  \n    } else {\n      // console.log('Redirector:: clearing redirect');\n      setRedirect({});\n      setTimeout(() => history.replace({\n        state: {}\n      }), 4000);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n}\n\nexport default Redirector; // state: {alert},\n// const {path, alert} = redirect;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/components/Redirector.js"],"names":["React","Component","Redirector","componentDidUpdate","console","log","redirect","location","history","setRedirect","props","path","pathname","push","setTimeout","replace","state","render"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAEjCE,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,OAArB;AAA8BC,MAAAA;AAA9B,QAA6C,KAAKC,KAAxD;AACA,UAAM;AAACC,MAAAA;AAAD,QAASL,QAAf;AAGA,QAAI,CAACK,IAAL,EAAW;;AAGX,QAAIA,IAAI,KAAKJ,QAAQ,CAACK,QAAtB,EAAgC;AAC9BJ,MAAAA,OAAO,CAACK,IAAR,CAAa;AACXD,QAAAA,QAAQ,EAAED;AADC,OAAb,EAD8B,CAI9B;AACD,KALD,MAMK;AACH;AACAF,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAK,MAAAA,UAAU,CAAE,MAAMN,OAAO,CAACO,OAAR,CAAgB;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAhB,CAAR,EAAsC,IAAtC,CAAV;AACD;AACF;;AAGDC,EAAAA,MAAM,GAAG;AACP,wBAAO,yCAAP;AACD;;AA3BgC;;AA8BnC,eAAef,UAAf,C,CAEE;AACA","sourcesContent":["import React, {Component} from 'react';\n\nclass Redirector extends Component {\n\n  componentDidUpdate() {\n    console.log('Redirector::componentDidUpdate');\n    const {redirect, location, history, setRedirect} = this.props;\n    const {path} = redirect;\n\n\n    if (!path) return;\n\n\n    if (path !== location.pathname) {\n      history.push({\n        pathname: path,  \n      });  \n      // console.log('Redirector::performing redirect to', path);  \n    }\n    else {\n      // console.log('Redirector:: clearing redirect');\n      setRedirect({});\n      setTimeout( () => history.replace({state: {}}), 4000);\n    }\n  }\n  \n\n  render() {\n    return <></>;\n  }\n}\n\nexport default Redirector;\n\n  // state: {alert},\n  // const {path, alert} = redirect;"]},"metadata":{},"sourceType":"module"}