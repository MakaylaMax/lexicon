{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/GetWordContainer.js\";\nimport React, { Component } from 'react';\nimport Search from '../components/Search';\nimport { Switch, Route, Link, Redirect, withRouter } from 'react-router-dom';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass GetWordContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      word: {},\n      partOfSpeech: [],\n      versions: [],\n      shortdef: \"\",\n      pronunciation: \"\"\n    };\n\n    this.setWord = word => this.setState({\n      word\n    });\n\n    this.callApi = () => {\n      return MerriamAPI.getWordInfo(this.state.word);\n    };\n\n    this.redirectTo = word => `/definition/${word}`;\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data,\n        errors\n      } = await MerriamAPI.show(this.props.match.params.word);\n\n      if (data) {\n        this.setState({\n          word: data,\n          versions: data[0].meta.stems,\n          shortdef: data[0].shortdef[0],\n          partOfSpeech: data[0].fl,\n          pronunciation: data[0].hwi.prs[0].mw\n        });\n      } else {\n        console.log(\"ERROR\");\n        console.log(errors);\n      }\n    } catch {\n      console.log(\"ERROR\");\n    }\n  }\n\n  render() {\n    const {\n      partOfSpeech,\n      versions,\n      shortdef,\n      pronunciation\n    } = this.state.word;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      word: this.state.word,\n      setWord: this.setWord,\n      callApi: this.callApi,\n      redirectTo: this.props.setRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, partOfSpeech), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, versions.map((v, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }\n    }, v))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, pronunciation), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, shortdef));\n  }\n\n}\n\nexport default GetWordContainer;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/GetWordContainer.js"],"names":["React","Component","Search","Switch","Route","Link","Redirect","withRouter","MerriamAPI","GetWordContainer","state","word","partOfSpeech","versions","shortdef","pronunciation","setWord","setState","callApi","getWordInfo","redirectTo","componentDidMount","data","errors","show","props","match","params","meta","stems","fl","hwi","prs","mw","console","log","render","setRedirect","map","v","i"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Search from '../components/Search';\nimport {Switch, Route, Link, Redirect, withRouter} from 'react-router-dom';\nimport MerriamAPI from '../services/MerriamAPI';\n\n\nclass GetWordContainer extends Component {\n\n  state = {\n    word: {},\n    partOfSpeech: [],\n    versions: [],\n    shortdef: \"\",\n    pronunciation: \"\",\n  }\n\n  setWord = word =>\n  this.setState({word});\n\n  callApi = () => {\n    return MerriamAPI.getWordInfo(this.state.word)\n  }\n\n  redirectTo = (word) => \n    `/definition/${word}`\n\n  async componentDidMount(){\n    try{\n      const {data, errors} = await MerriamAPI.show(this.props.match.params.word)\n      if (data) {\n          this.setState({\n            word: data,\n            versions: data[0].meta.stems,\n            shortdef: data[0].shortdef[0],\n            partOfSpeech: data[0].fl,\n            pronunciation: data[0].hwi.prs[0].mw,\n        })\n      }\n      else{\n        console.log(\"ERROR\");\n        console.log(errors);\n      }\n    }\n    catch {\n      console.log(\"ERROR\")\n    }\n  }\n\nrender (){\n\n  const {partOfSpeech, versions, shortdef, pronunciation} = this.state.word;\n\n  return (\n      <div>\n        <Search \n        word={this.state.word}\n        setWord={this.setWord}\n        callApi={this.callApi}\n        redirectTo={this.props.setRedirect}\n        />\n        <div>\n            {/* {word} */}\n        </div>\n        <div>\n            {partOfSpeech}\n        </div>\n        <div>\n            {versions.map((v, i) => <div key={i}>{v}</div>)}\n        </div>\n        <div>\n            {pronunciation}\n        </div>\n        <div>\n            {shortdef}\n        </div>\n      </div>\n  );\n  }\n}\n\n export default GetWordContainer;\n\n"]},"metadata":{},"sourceType":"module"}