{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/GetWordContainer.js\";\nimport React, { Component } from 'react';\nimport Search from '../components/Search';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass GetWordContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      word: {}\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data\n      } = await MerriamAPI.getWordInfo(this.props.match.params.id);\n\n      if (data) {\n        this.setState({\n          word: data\n        });\n      } else {\n        // TODO: Change to a Modal\n        console.log(\"ERROR!\");\n      }\n    } catch {\n      console.log(\"ERROR!\");\n    }\n  }\n\n  render() {\n    const {\n      word,\n      partOfSpeech,\n      versions,\n      pronunciation,\n      shortdef\n    } = this.state.word;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      handleUpdate: this.props.handleUpdate,\n      setRedirect: this.props.setRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, word), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, partOfSpeech), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, versions), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, pronunciation), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, shortdef));\n  }\n\n}\n\nexport default GetWordContainer; //FIRST ATTEMPT\n// class GetWordContainer extends Component {\n// render (){\n//   return (\n//       <div>\n//         <Search\n//           handleUpdate={this.props.handleUpdate}\n//           setRedirect={this.props.setRedirect}\n//         />\n//         <div>\n//              {this.props.match.params.word}\n//         </div>\n//         <div>\n//              {this.props.partOfSpeech}\n//         </div>\n//         <div>\n//              {this.props.versions.map((v, i) => <div key={i}>{v}</div>)}\n//         </div>\n//         <div>\n//              {this.props.pronunciation}\n//         </div>\n//         <div>\n//              {this.props.shortdef}\n//         </div>\n//       </div>\n//   );\n//   }\n// }\n//  export default GetWordContainer;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/GetWordContainer.js"],"names":["React","Component","Search","MerriamAPI","GetWordContainer","state","word","componentDidMount","data","getWordInfo","props","match","params","id","setState","console","log","render","partOfSpeech","versions","pronunciation","shortdef","handleUpdate","setRedirect"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAGA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAEvCI,KAFuC,GAE/B;AACNC,MAAAA,IAAI,EAAE;AADA,KAF+B;AAAA;;AAMvC,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAM;AAACC,QAAAA;AAAD,UAAS,MAAML,UAAU,CAACM,WAAX,CAAuB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C,CAArB;;AACA,UAAIL,IAAJ,EAAU;AACR,aAAKM,QAAL,CAAc;AAACR,UAAAA,IAAI,EAAEE;AAAP,SAAd;AACD,OAFD,MAGK;AACH;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AACF,KATD,CAUA,MAAM;AACFD,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACF;;AAGDC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAACX,MAAAA,IAAD;AAAOY,MAAAA,YAAP;AAAqBC,MAAAA,QAArB;AAA+BC,MAAAA,aAA/B;AAA8CC,MAAAA;AAA9C,QAA0D,KAAKhB,KAAL,CAAWC,IAA3E;AAEA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,YAAY,EAAE,KAAKI,KAAL,CAAWY,YAD3B;AAEE,MAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWa,WAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMjB,IADN,CALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMY,YADN,CARF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACOC,QADP,CAXF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMC,aADN,CAfF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMC,QADN,CAlBF,CAFJ;AAyBC;;AApDoC;;AAuDtC,eAAejB,gBAAf,C,CAIH;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {Component} from 'react';\nimport Search from '../components/Search';\nimport MerriamAPI from '../services/MerriamAPI';\n\n\nclass GetWordContainer extends Component {\n\n  state = {\n    word: {},\n  }\n\n  async componentDidMount() {\n    try {\n      const {data} = await MerriamAPI.getWordInfo(this.props.match.params.id);\n      if (data) {\n        this.setState({word: data})\n      }\n      else {\n        // TODO: Change to a Modal\n        console.log(\"ERROR!\");\n      }\n    }\n    catch {\n        console.log(\"ERROR!\");\n    }\n  }\n\n\n  render (){\n\n    const {word, partOfSpeech, versions, pronunciation, shortdef} = this.state.word;\n    \n    return (\n  \n        <div>\n          <Search\n            handleUpdate={this.props.handleUpdate}\n            setRedirect={this.props.setRedirect}\n          />\n          <div>\n               {word}\n          </div>\n          <div>\n               {partOfSpeech}\n          </div>\n          <div>\n                {versions}\n               {/* {this.props.versions.map((v, i) => <div key={i}>{v}</div>)} */}\n          </div>\n          <div>\n               {pronunciation}\n          </div>\n          <div>\n               {shortdef}\n          </div>\n        </div>\n    );\n    }\n  }\n  \n   export default GetWordContainer;\n  \n\n\n//FIRST ATTEMPT\n// class GetWordContainer extends Component {\n\n// render (){\n  \n//   return (\n\n//       <div>\n//         <Search\n//           handleUpdate={this.props.handleUpdate}\n//           setRedirect={this.props.setRedirect}\n//         />\n//         <div>\n//              {this.props.match.params.word}\n//         </div>\n//         <div>\n//              {this.props.partOfSpeech}\n//         </div>\n//         <div>\n//              {this.props.versions.map((v, i) => <div key={i}>{v}</div>)}\n//         </div>\n//         <div>\n//              {this.props.pronunciation}\n//         </div>\n//         <div>\n//              {this.props.shortdef}\n//         </div>\n//       </div>\n//   );\n//   }\n// }\n\n//  export default GetWordContainer;\n\n\n\n"]},"metadata":{},"sourceType":"module"}