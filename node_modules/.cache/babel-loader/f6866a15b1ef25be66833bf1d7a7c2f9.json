{"ast":null,"code":"import React, { Component } from 'react';\n\nclass Redirector extends Component {\n  componentDidUpdate() {\n    // console.log('Redirector::componentDidUpdate');\n    const {\n      redirect,\n      location,\n      history,\n      setRedirect,\n      setCurrentState\n    } = this.props;\n    const {\n      path\n    } = redirect;\n    if (!path) return;\n\n    if (path !== location.pathname) {\n      // console.log('Redirector::performing redirect to', path);\n      history.push({\n        pathname: path\n      });\n      {\n        setCurrentState();\n      }\n    } else {\n      // console.log('Redirector:: clearing redirect');\n      setRedirect({});\n      setTimeout(() => history.replace({\n        state: {}\n      }), 4000);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n}\n\nexport default Redirector; // state: {alert},\n// const {path, alert} = redirect;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/components/Redirector.js"],"names":["React","Component","Redirector","componentDidUpdate","redirect","location","history","setRedirect","setCurrentState","props","path","pathname","push","setTimeout","replace","state","render"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAEjCE,EAAAA,kBAAkB,GAAG;AACnB;AACA,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,OAArB;AAA8BC,MAAAA,WAA9B;AAA2CC,MAAAA;AAA3C,QAA8D,KAAKC,KAAzE;AACA,UAAM;AAACC,MAAAA;AAAD,QAASN,QAAf;AAEA,QAAI,CAACM,IAAL,EAAW;;AAEX,QAAIA,IAAI,KAAKL,QAAQ,CAACM,QAAtB,EAAgC;AAC9B;AACAL,MAAAA,OAAO,CAACM,IAAR,CAAa;AACXD,QAAAA,QAAQ,EAAED;AADC,OAAb;AAIA;AAACF,QAAAA,eAAe;AAAG;AACpB,KAPD,MAQK;AACH;AACAD,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAM,MAAAA,UAAU,CAAE,MAAMP,OAAO,CAACQ,OAAR,CAAgB;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAhB,CAAR,EAAsC,IAAtC,CAAV;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAAO,yCAAP;AACD;;AA1BgC;;AA6BnC,eAAed,UAAf,C,CAEE;AACA","sourcesContent":["import React, {Component} from 'react';\n\nclass Redirector extends Component {\n\n  componentDidUpdate() {\n    // console.log('Redirector::componentDidUpdate');\n    const {redirect, location, history, setRedirect, setCurrentState} = this.props;\n    const {path} = redirect;\n\n    if (!path) return;\n\n    if (path !== location.pathname) {\n      // console.log('Redirector::performing redirect to', path);\n      history.push({\n        pathname: path,\n      \n      });\n      {setCurrentState()}\n    }\n    else {\n      // console.log('Redirector:: clearing redirect');\n      setRedirect({});\n      setTimeout( () => history.replace({state: {}}), 4000);\n    }\n  }\n\n  render() {\n    return <></>;\n  }\n}\n\nexport default Redirector;\n\n  // state: {alert},\n  // const {path, alert} = redirect;"]},"metadata":{},"sourceType":"module"}