{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/components/WordDetails.js\";\nimport React, { Component } from 'react';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass WordDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentWord: {},\n      info: [],\n      partOfSpeech: [],\n      versions: [],\n      shortdef: \"\",\n      pronunciation: \"\",\n      error: ''\n    };\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const id = this.props.currentWord;\n\n    if (id !== prevProps.currentWord) {\n      const currentWord = await MerriamAPI.getWordInfo(id);\n      this.setState({\n        currentWord: currentWord // info: data,\n        // versions: data[0].meta.stems,\n        // shortdef: data[0].shortdef[0],\n        // partOfSpeech: data[0].fl,\n        // pronunciation: data[0].hwi.prs[0].mw, \n        // error: '',\n\n      });\n    }\n  }\n\n  render() {\n    let detail;\n\n    if (this.state.currentWord) {\n      detail = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, \"info\"));\n    } else detail = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"No word selected\"));\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, detail);\n  }\n\n}\n\n;\nexport default WordDetails;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/components/WordDetails.js"],"names":["React","Component","MerriamAPI","WordDetails","state","currentWord","info","partOfSpeech","versions","shortdef","pronunciation","error","componentDidUpdate","prevProps","prevState","id","props","getWordInfo","setState","render","detail"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAGA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAElCG,KAFkC,GAE1B;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,YAAY,EAAE,EAHV;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,QAAQ,EAAE,EALN;AAMJC,MAAAA,aAAa,EAAE,EANX;AAOJC,MAAAA,KAAK,EAAE;AAPH,KAF0B;AAAA;;AAYlC,QAAMC,kBAAN,CAAyBC,SAAzB,EAAoCC,SAApC,EAA+C;AAC7C,UAAMC,EAAE,GAAG,KAAKC,KAAL,CAAWX,WAAtB;;AACA,QAAIU,EAAE,KAAKF,SAAS,CAACR,WAArB,EAAkC;AAChC,YAAMA,WAAW,GAAG,MAAMH,UAAU,CAACe,WAAX,CAAuBF,EAAvB,CAA1B;AACA,WAAKG,QAAL,CAAc;AACZb,QAAAA,WAAW,EAAEA,WADD,CAEZ;AACA;AACA;AACA;AACA;AACA;;AAPY,OAAd;AASD;AACF;;AAGHc,EAAAA,MAAM,GAAE;AACJ,QAAIC,MAAJ;;AACA,QAAI,KAAKhB,KAAL,CAAWC,WAAf,EAA2B;AACvBe,MAAAA,MAAM,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADA;AAgBH,KAjBD,MAmBIA,MAAM,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ;;AAKJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,MADL,CADJ;AAKD;;AA5DiC;;AA6DnC;AAED,eAAejB,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport MerriamAPI from '../services/MerriamAPI';\n\n\nclass WordDetails extends Component {\n\n  state = {\n      currentWord: {},\n      info: [],\n      partOfSpeech: [],\n      versions: [],\n      shortdef: \"\",\n      pronunciation: \"\",\n      error: '',\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    const id = this.props.currentWord;\n    if (id !== prevProps.currentWord) {\n      const currentWord = await MerriamAPI.getWordInfo(id);\n      this.setState({ \n        currentWord: currentWord,\n        // info: data,\n        // versions: data[0].meta.stems,\n        // shortdef: data[0].shortdef[0],\n        // partOfSpeech: data[0].fl,\n        // pronunciation: data[0].hwi.prs[0].mw, \n        // error: '',\n       });\n    }\n  }\n  \n\nrender(){\n    let detail; \n    if (this.state.currentWord){\n        detail = \n        <div>\n            <p>info</p>\n            {/* <p>      \n                <b>part of speech:</b> {this.state.partOfSpeech}\n            </p>\n            <p>\n                <b>pronunciation:</b> {this.state.pronunciation}\n            </p>\n            <p>\n                <b>definition:</b>  {this.state.shortdef}\n            </p>\n            <p>\n                <b>versions:</b>  {this.state.versions.map((v, i) => <div key={i}>{v}</div>)}\n            </p> */}\n        </div>\n    }\n    else \n        detail = \n            <div>\n                <span>No word selected</span>\n            </div>\n    \n    return (\n        <div>\n            {detail}\n        </div>\n    );\n  } \n};\n\nexport default WordDetails;"]},"metadata":{},"sourceType":"module"}