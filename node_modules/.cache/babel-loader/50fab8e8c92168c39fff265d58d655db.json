{"ast":null,"code":"const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json';\nconst collectionUrl = `${baseUrl}/jovial?key=${apiKey}`;\n\nconst index = () => {\n  return fetch(collectionUrl).then(response => response.json());\n};\n\nconst handleAPIErrors = response => {};\n\nfunction prepWord(word) {\n  return encodeURIComponent(word);\n}\n\nvar utils = {\n  prepWord: prepWord\n};\n\nfunction getQueryParams(params) {\n  params[\"api_key\"] = apiKey;\n  var pairs = Object.keys(params).map(function (key) {\n    var result = key + \"=\" + params[key];\n    return result;\n  });\n  var urlParams = pairs.reduce(function (prev, next) {\n    return prev + \"&\" + next;\n  });\n  return urlParams;\n}\n\nfunction prepareUrl(word, params) {\n  var url = baseUrl + \"/\" + utils.prepWord(word) + \"?\" + getQueryParams(params);\n  return url;\n} //rewrite\n// function callWord(word, params){\n//     var url = prepareUrl(word, params);\n//     return fetch(url).then(response => response.json());\n// }\n// function getDefinitions(word){\n//     var params = {}\n//     return callWord(word, params)\n// }\n// function getWordInfo(word){\n//     var meta = {}\n//     return fetch([getDefinitions(word)]).then(\n//         props.spread(function(definitions){\n//         meta.definitions = definitions;\n//         return meta\n//         })\n//     )\n// }\n//start\n// function callWord(word, params){\n//     var url = prepareUrl(word, params);\n//     return axios.get(url).then(function(response){\n//       return response.data\n//     })\n//   }\n// function getDefinitions(word){\n//     var params = {}\n//     return callWord(word, params)\n// }\n// function getWordInfo(word){\n//     var meta = {}\n//     return axios.all([getDefinitions(word)]).then(\n//         axios.spread(function(definitions){\n//         meta.definitions = definitions;\n//         return meta\n//         })\n//     )\n// }\n//end\n\n\nconst MerriamAPI = {\n  index // getDefinitions,\n  // getWordInfo\n\n};\nconsole.log(index());\nexport default MerriamAPI;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/services/MerriamAPI.js"],"names":["apiKey","process","env","REACT_APP_MERRIAM_API_KEY","baseUrl","collectionUrl","index","fetch","then","response","json","handleAPIErrors","prepWord","word","encodeURIComponent","utils","getQueryParams","params","pairs","Object","keys","map","key","result","urlParams","reduce","prev","next","prepareUrl","url","MerriamAPI","console","log"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA3B;AACA,MAAMC,OAAO,GAAG,iEAAhB;AACA,MAAMC,aAAa,GAAI,GAAED,OAAQ,eAAcJ,MAAO,EAAtD;;AAEA,MAAMM,KAAK,GAAG,MAAM;AAChB,SAAOC,KAAK,CAACF,aAAD,CAAL,CACFG,IADE,CACGC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADb,CAAP;AAEH,CAHD;;AAKA,MAAMC,eAAe,GAAGF,QAAQ,IAAI,CAEnC,CAFD;;AAIA,SAASG,QAAT,CAAkBC,IAAlB,EAAuB;AACnB,SAAOC,kBAAkB,CAACD,IAAD,CAAzB;AACD;;AAEH,IAAIE,KAAK,GAAG;AACRH,EAAAA,QAAQ,EAAEA;AADF,CAAZ;;AAIA,SAASI,cAAT,CAAwBC,MAAxB,EAA+B;AAC3BA,EAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBjB,MAApB;AACI,MAAIkB,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,GAApB,CAAwB,UAASC,GAAT,EAAa;AAC7C,QAAIC,MAAM,GAAGD,GAAG,GAAG,GAAN,GAAYL,MAAM,CAACK,GAAD,CAA/B;AACA,WAAOC,MAAP;AACH,GAHW,CAAZ;AAIA,MAAIC,SAAS,GAAGN,KAAK,CAACO,MAAN,CAAa,UAASC,IAAT,EAAcC,IAAd,EAAmB;AAC5C,WAAOD,IAAI,GAAG,GAAP,GAAaC,IAApB;AACH,GAFe,CAAhB;AAGJ,SAAOH,SAAP;AACH;;AAED,SAASI,UAAT,CAAoBf,IAApB,EAA0BI,MAA1B,EAAiC;AAC7B,MAAIY,GAAG,GAAGzB,OAAO,GAAG,GAAV,GAAgBW,KAAK,CAACH,QAAN,CAAeC,IAAf,CAAhB,GAAuC,GAAvC,GAA6CG,cAAc,CAACC,MAAD,CAArE;AACA,SAAOY,GAAP;AACH,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,UAAU,GAAG;AACfxB,EAAAA,KADe,CAEf;AACA;;AAHe,CAAnB;AAKAyB,OAAO,CAACC,GAAR,CAAY1B,KAAK,EAAjB;AACA,eAAewB,UAAf","sourcesContent":["const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json';\nconst collectionUrl = `${baseUrl}/jovial?key=${apiKey}`;\n\nconst index = () => {\n    return fetch(collectionUrl)\n        .then(response=>response.json());\n}\n\nconst handleAPIErrors = response => {\n\n}\n\nfunction prepWord(word){\n    return encodeURIComponent(word)\n  }\n  \nvar utils = {\n    prepWord: prepWord,\n}\n\nfunction getQueryParams(params){\n    params[\"api_key\"] = apiKey;\n        var pairs = Object.keys(params).map(function(key){\n            var result = key + \"=\" + params[key];\n            return result;\n        }) \n        var urlParams = pairs.reduce(function(prev,next){\n            return prev + \"&\" + next\n        })  \n    return urlParams\n}\n\nfunction prepareUrl(word, params){\n    var url = baseUrl + \"/\" + utils.prepWord(word) + \"?\" + getQueryParams(params);\n    return url\n}\n\n//rewrite\n// function callWord(word, params){\n//     var url = prepareUrl(word, params);\n//     return fetch(url).then(response => response.json());\n// }\n\n// function getDefinitions(word){\n//     var params = {}\n//     return callWord(word, params)\n// }\n\n// function getWordInfo(word){\n//     var meta = {}\n//     return fetch([getDefinitions(word)]).then(\n//         props.spread(function(definitions){\n//         meta.definitions = definitions;\n//         return meta\n//         })\n//     )\n// }\n\n//start\n// function callWord(word, params){\n//     var url = prepareUrl(word, params);\n//     return axios.get(url).then(function(response){\n//       return response.data\n//     })\n//   }\n  \n// function getDefinitions(word){\n//     var params = {}\n//     return callWord(word, params)\n// }\n\n// function getWordInfo(word){\n//     var meta = {}\n//     return axios.all([getDefinitions(word)]).then(\n//         axios.spread(function(definitions){\n//         meta.definitions = definitions;\n//         return meta\n//         })\n//     )\n// }\n//end\n\nconst MerriamAPI = {\n    index,\n    // getDefinitions,\n    // getWordInfo\n}\nconsole.log(index());\nexport default MerriamAPI;"]},"metadata":{},"sourceType":"module"}