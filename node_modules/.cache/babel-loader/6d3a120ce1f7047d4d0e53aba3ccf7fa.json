{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/GetWordContainer.js\";\nimport React, { Component } from 'react';\nimport Search from '../components/Search';\nimport { Switch, Route, Link, Redirect, withRouter } from 'react-router-dom';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass GetWordContainer extends Component {\n  constructor() {\n    super();\n\n    this.search = async ({\n      word\n    }) => {\n      try {\n        // var word = this.state.word.trim();\n        const data = await MerriamAPI.getWordInfo(word);\n\n        if (data) {\n          this.setState({\n            word: word,\n            info: data[0].shortdef[0]\n          }, () => {\n            this.props.history.push(`/definition/${this.state.word}`);\n          });\n        } else {\n          console.log('No Definition Found');\n        }\n      } catch {\n        this.setState({\n          error: 'No Definition Found'\n        });\n      } // console.log(this.state.info)\n      // console.log(this.state.word)\n\n    };\n\n    this.state = {\n      word: '',\n      info: []\n    };\n    this.state = {\n      info: [],\n      word: '',\n      error: ''\n    };\n    this.search = this.search.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data\n      } = await MerriamAPI.show(this.props.match.params.word);\n\n      if (data) {\n        this.setState({\n          info: data\n        });\n      } else {\n        console.log(\"ERROR ON GETWORDCONTAINER!\");\n      }\n    } catch {\n      console.log(\"ERROR ON GETWORDCONTAINER!\");\n    }\n\n    console.log(this.state.info);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      search: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default GetWordContainer;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/GetWordContainer.js"],"names":["React","Component","Search","Switch","Route","Link","Redirect","withRouter","MerriamAPI","GetWordContainer","constructor","search","word","data","getWordInfo","setState","info","shortdef","props","history","push","state","console","log","error","bind","componentDidMount","show","match","params","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,QAA7B,EAAuCC,UAAvC,QAAwD,kBAAxD;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAGA,MAAMC,gBAAN,SAA+BR,SAA/B,CAAyC;AAEvCS,EAAAA,WAAW,GAAE;AACX;;AADW,SAWbC,MAXa,GAWJ,OAAO;AAACC,MAAAA;AAAD,KAAP,KAAkB;AACzB,UAAG;AACC;AACA,cAAMC,IAAI,GAAG,MAAML,UAAU,CAACM,WAAX,CAAuBF,IAAvB,CAAnB;;AACA,YAAIC,IAAJ,EAAS;AACL,eAAKE,QAAL,CAAc;AACVH,YAAAA,IAAI,EAAEA,IADI;AAEVI,YAAAA,IAAI,EAAEH,IAAI,CAAC,CAAD,CAAJ,CAAQI,QAAR,CAAiB,CAAjB;AAFI,WAAd,EAIA,MAAM;AACF,iBAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAyB,eAAc,KAAKC,KAAL,CAAWT,IAAK,EAAvD;AACH,WAND;AAQH,SATD,MAUI;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;AACJ,OAhBD,CAiBA,MAAK;AACD,aAAKR,QAAL,CAAc;AAACS,UAAAA,KAAK,EAAE;AAAR,SAAd;AACH,OApBwB,CAqBzB;AACA;;AACH,KAlCc;;AAAA,SAoCbH,KApCa,GAoCL;AACNT,MAAAA,IAAI,EAAE,EADA;AAENI,MAAAA,IAAI,EAAE;AAFA,KApCK;AAET,SAAKK,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE,EADK;AAEXJ,MAAAA,IAAI,EAAE,EAFK;AAGXY,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKF,SAAKb,MAAL,GAAc,KAAKA,MAAL,CAAYc,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAiCH,QAAMC,iBAAN,GAAyB;AACvB,QAAG;AACD,YAAM;AAACb,QAAAA;AAAD,UAAS,MAAML,UAAU,CAACmB,IAAX,CAAgB,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,MAAjB,CAAwBjB,IAAxC,CAArB;;AACA,UAAIC,IAAJ,EAAS;AACP,aAAKE,QAAL,CAAc;AAACC,UAAAA,IAAI,EAAEH;AAAP,SAAd;AACD,OAFD,MAGI;AACFS,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;AACF,KARD,CASA,MAAK;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWL,IAAvB;AACD;;AAGDc,EAAAA,MAAM,GAAG;AAEP,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKnB,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ;AASC;;AAvEsC;;AA0ExC,eAAeF,gBAAf","sourcesContent":["import React, {Component} from 'react';\nimport Search from '../components/Search';\nimport {Switch, Route, Link, Redirect, withRouter} from 'react-router-dom';\nimport MerriamAPI from '../services/MerriamAPI';\n\n\nclass GetWordContainer extends Component {\n\n  constructor(){ \n    super();\n      this.state = {\n        info: [],\n        word: '',\n        error: ''\n      };\n    this.search = this.search.bind(this);\n  }\n\n\n  search = async ({word}) => {\n    try{\n        // var word = this.state.word.trim();\n        const data = await MerriamAPI.getWordInfo(word);\n        if (data){\n            this.setState({\n                word: word,\n                info: data[0].shortdef[0]\n            }, \n            () => {\n                this.props.history.push(`/definition/${this.state.word}`);\n            }\n            );\n        }\n        else{\n            console.log('No Definition Found')\n        }\n    }\n    catch{\n        this.setState({error: 'No Definition Found'})\n    }\n    // console.log(this.state.info)\n    // console.log(this.state.word)\n}\n\n  state = {\n    word: '',\n    info: [],\n  }\n\nasync componentDidMount(){\n  try{\n    const {data} = await MerriamAPI.show(this.props.match.params.word);\n    if (data){\n      this.setState({info: data})\n    }\n    else{\n      console.log(\"ERROR ON GETWORDCONTAINER!\")\n    }\n  }\n  catch{\n    console.log(\"ERROR ON GETWORDCONTAINER!\")\n  }\n  console.log(this.state.info)\n}\n\n\nrender (){\n\n  return (\n      <div>\n      <Search search={this.search}/>\n      <div>\n          {/* expected results */}\n          {/* {this.state.info} */}\n      </div>\n      </div>\n  );\n  }\n}\n\n export default GetWordContainer;"]},"metadata":{},"sourceType":"module"}