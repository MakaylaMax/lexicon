{"ast":null,"code":"const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json/'; // const collectionUrl = `${baseUrl}/jovial?key=${apiKey}`;\n\nconst handleAPIErrors = response => {};\n\nfunction prepWord(word) {\n  return encodeURIComponent(word);\n}\n\nvar utils = {\n  prepWord: prepWord\n};\n\nfunction getQueryParams(params) {\n  params[\"api_key\"] = apiKey;\n  var pairs = Object.keys(params).map(function (key) {\n    var result = key + \"=\" + params[key];\n    return result;\n  });\n  var urlParams = pairs.reduce(function (prev, next) {\n    return prev + \"&\" + next;\n  });\n  return urlParams;\n}\n\nfunction prepareUrl(word, params) {\n  var url = baseUrl + \"/\" + utils.prepWord(word) + \"?\" + getQueryParams(params);\n  return url;\n}\n\nfunction callWordnik(endpoint, word, resource, params) {\n  var url = prepareUrl(endpoint, word, resource, params);\n  return axios.get(url).then(function (response) {\n    return response.data;\n  });\n}\n\nfunction getDefinitions(word) {\n  var params = {};\n  return callWordnik(wordEp, word, definitionsResource, params);\n}\n\nfunction getAudio(word) {\n  var params = {\n    \"limit\": 1\n  };\n  return callWordnik(wordEp, word, audioResource, params);\n}\n\nfunction getWordInfo(word) {\n  var meta = {};\n  return axios.all([getDefinitions(word), getAudio(word)]).then(axios.spread(function (definitions, audio) {\n    meta.definitions = definitions;\n    meta.audio = audio;\n    meta.audio[0] && meta.audio[0].fileUrl && (meta.audio[0].fileUrl = \"https://\" + meta.audio[0].fileUrl.slice(7));\n    return meta;\n  }));\n} // const index = () =>{\n//     return fetch(collectionUrl)\n//         .then(response=>response.json());\n// }\n\n\nconst MerriamAPI = {\n  // index,\n  getDefinitions,\n  getWordInfo\n};\nexport default MerriamAPI;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/services/MerriamAPI.js"],"names":["apiKey","process","env","REACT_APP_MERRIAM_API_KEY","baseUrl","handleAPIErrors","response","prepWord","word","encodeURIComponent","utils","getQueryParams","params","pairs","Object","keys","map","key","result","urlParams","reduce","prev","next","prepareUrl","url","callWordnik","endpoint","resource","axios","get","then","data","getDefinitions","wordEp","definitionsResource","getAudio","audioResource","getWordInfo","meta","all","spread","definitions","audio","fileUrl","slice","MerriamAPI"],"mappings":"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","sourcesContent":["const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json/';\n// const collectionUrl = `${baseUrl}/jovial?key=${apiKey}`;\n\nconst handleAPIErrors = response => {\n\n}\n\nfunction prepWord(word){\n    return encodeURIComponent(word)\n  }\n  \nvar utils = {\n    prepWord: prepWord,\n}\n\nfunction getQueryParams(params){\n    params[\"api_key\"] = apiKey;\n        var pairs = Object.keys(params).map(function(key){\n            var result = key + \"=\" + params[key];\n            return result;\n        }) \n        var urlParams = pairs.reduce(function(prev,next){\n            return prev + \"&\" + next\n        })  \n    return urlParams\n}\n\nfunction prepareUrl(word, params){\n    var url = baseUrl + \"/\" + utils.prepWord(word) + \"?\" + getQueryParams(params);\n    return url\n}\n\n\nfunction callWordnik(endpoint,word,resource,params){\n    var url = prepareUrl(endpoint,word,resource,params);\n    return axios.get(url).then(function(response){\n      return response.data\n    })\n  }\n  \n  function getDefinitions(word){\n    var params = {}\n    return callWordnik(wordEp,word,definitionsResource,params)\n  }\n  \n  function getAudio(word){\n    var params = {\"limit\":1}\n    return callWordnik(wordEp, word, audioResource, params)\n  }\n  \n  function getWordInfo(word){\n    var meta = {}\n    return axios.all([getDefinitions(word),getAudio(word)]).then(\n      axios.spread(function(definitions,audio){\n        meta.definitions = definitions;\n        meta.audio = audio;\n        meta.audio[0] && meta.audio[0].fileUrl && (meta.audio[0].fileUrl = \"https://\" + meta.audio[0].fileUrl.slice(7))\n        return meta\n      })\n    )\n  }\n\n\n// const index = () =>{\n//     return fetch(collectionUrl)\n//         .then(response=>response.json());\n// }\n\n\nconst MerriamAPI = {\n    // index,\n    getDefinitions,\n    getWordInfo\n}\n\nexport default MerriamAPI;"]},"metadata":{},"sourceType":"module"}