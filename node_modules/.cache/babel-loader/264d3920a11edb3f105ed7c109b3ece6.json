{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/Home.js\";\nimport React, { Component } from 'react';\nimport Search from '../components/Search';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      word: '',\n      error: '',\n      info: [],\n      partOfSpeech: [],\n      versions: [],\n      shortdef: \"\",\n      pronunciation: \"\"\n    };\n\n    this.redirectTo = () => `/definition/${word}`;\n\n    this.handleUpdate = values => this.setState({ ...values\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, \"My Dictionary\"), /*#__PURE__*/React.createElement(Search, {\n      handleUpdate: this.handleUpdate,\n      redirectTo: this.redirectTo,\n      setRedirect: this.props.setRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }));\n  }\n\n} //FIRST ATTEMPT \n//     state = {\n//         error: '',\n//     }\n//     search = async (word) => {\n//         try{\n//             const data = await MerriamAPI.getWordInfo(word);\n//             if (data){\n//                 this.props.handleUpdate({\n//                     word: word,\n//                     info: data,\n//                     versions: data[0].meta.stems,\n//                     shortdef: data[0].shortdef[0],\n//                     partOfSpeech: data[0].fl,\n//                     pronunciation: data[0].hwi.prs[0].mw, \n//                 });\n//                 this.props.setRedirect({\n//                     path: `/definition/${word}`,\n//                 });\n//             }\n//             else{\n//                 console.log('No Definition Found')\n//             }\n//         }\n//         catch{\n//             this.setState({error: 'No Definition Found'})\n//         }\n//     }\n// render (){\n//     return (\n//         <div>\n//         <h1>My Dictionary</h1>\n//         <Search search={this.search}/>\n//         </div>\n//     );\n//     }\n// }\n\n\nexport default Home;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/Home.js"],"names":["React","Component","Search","MerriamAPI","Home","state","word","error","info","partOfSpeech","versions","shortdef","pronunciation","redirectTo","handleUpdate","values","setState","render","props","setRedirect"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAGzBI,KAHyB,GAGjB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,YAAY,EAAE,EAJV;AAKJC,MAAAA,QAAQ,EAAE,EALN;AAMJC,MAAAA,QAAQ,EAAE,EANN;AAOJC,MAAAA,aAAa,EAAE;AAPX,KAHiB;;AAAA,SAazBC,UAbyB,GAaZ,MACR,eAAcP,IAAK,EAdC;;AAAA,SAgBzBQ,YAhByB,GAgBVC,MAAM,IACrB,KAAKC,QAAL,CAAc,EAAC,GAAGD;AAAJ,KAAd,CAjByB;AAAA;;AAoBzBE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEA,oBAAC,MAAD;AACI,MAAA,YAAY,EAAE,KAAKH,YADvB;AAEI,MAAA,UAAU,EAAE,KAAKD,UAFrB;AAGI,MAAA,WAAW,EAAE,KAAKK,KAAL,CAAWC,WAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ;AAUH;;AA/BwB,C,CAoC7B;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,eAAef,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport Search from '../components/Search';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass Home extends Component {   \n\n\n    state = {\n        word: '',\n        error: '',\n        info: [],\n        partOfSpeech: [],\n        versions: [],\n        shortdef: \"\",\n        pronunciation: \"\",\n    }\n\n    redirectTo = () =>\n        `/definition/${word}`\n\n    handleUpdate = values => \n    this.setState({...values})\n \n\n    render (){\n        return (\n            <div>\n            <h1>My Dictionary</h1>\n            <Search \n                handleUpdate={this.handleUpdate}\n                redirectTo={this.redirectTo}\n                setRedirect={this.props.setRedirect}\n            />\n            </div>\n        );\n    }\n}\n\n\n\n//FIRST ATTEMPT \n//     state = {\n//         error: '',\n//     }\n\n\n//     search = async (word) => {\n\n//         try{\n//             const data = await MerriamAPI.getWordInfo(word);\n            \n//             if (data){\n//                 this.props.handleUpdate({\n//                     word: word,\n//                     info: data,\n//                     versions: data[0].meta.stems,\n//                     shortdef: data[0].shortdef[0],\n//                     partOfSpeech: data[0].fl,\n//                     pronunciation: data[0].hwi.prs[0].mw, \n//                 });\n//                 this.props.setRedirect({\n//                     path: `/definition/${word}`,\n//                 });\n//             }\n//             else{\n//                 console.log('No Definition Found')\n//             }\n//         }\n//         catch{\n//             this.setState({error: 'No Definition Found'})\n//         }\n//     }\n \n\n// render (){\n//     return (\n//         <div>\n//         <h1>My Dictionary</h1>\n//         <Search search={this.search}/>\n//         </div>\n//     );\n//     }\n// }\n\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}