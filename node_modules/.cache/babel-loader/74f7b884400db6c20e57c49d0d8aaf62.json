{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/components/Search.js\";\nimport React, { Component } from 'react';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      word: ''\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        word: event.target.value.toLowerCase()\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.search(this.state.word);\n    };\n\n    this.search = async word => {\n      try {\n        const data = await MerriamAPI.getWordInfo(word);\n\n        if (data) {\n          this.props.handleUpdate({\n            word: word,\n            info: data,\n            versions: data[0].meta.stems,\n            shortdef: data[0].shortdef[0],\n            partOfSpeech: data[0].fl,\n            pronunciation: data[0].hwi.prs[0].mw\n          });\n          this.props.setRedirect({\n            path: `/definition/${word}`\n          });\n        } else {\n          console.log('No Definition Found');\n        }\n      } catch {\n        this.setState({\n          error: 'No Definition Found'\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Search\")));\n  }\n\n} //SECOND ATTEMPT\n// class Search extends Component {\n//   constructor(props){\n//     super(props);\n//       this.state = {\n//         word:'',\n//       };\n//       this.handleChange = this.handleChange.bind(this);\n//       this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//   handleChange = (event) => {\n//     this.setState({word:event.target.value.toLowerCase()})\n//   }\n//   handleSubmit = (e) => {\n//       e.preventDefault();\n//       this.props.search(this.state.word);\n//     }\n//   render (){\n//       return (\n//         <form onSubmit={this.handleSubmit}>\n//         <div>\n//           <input type=\"text\" onChange={this.handleChange} />\n//           <button type=\"submit\">Search</button>\n//         </div>\n//         </form>\n//       );\n//     }\n//   }\n//FIRST ATTEMPT \n//   state = {\n//     error: '',\n// }\n// search = async (word) => {\n//     try{\n//         const data = await MerriamAPI.getWordInfo(word);\n//         if (data){\n//             this.props.handleUpdate({\n//                 word: word,\n//                 info: data,\n//                 versions: data[0].meta.stems,\n//                 shortdef: data[0].shortdef[0],\n//                 partOfSpeech: data[0].fl,\n//                 pronunciation: data[0].hwi.prs[0].mw, \n//             });\n//         // () => {\n//             this.props.setRedirect({\n//                 path: `/definition/${word}`,\n//                 // path: `/definition/${word}`,  \n//             });\n//             // }\n//         }\n//         else{\n//             console.log('No Definition Found')\n//         }\n//     }\n//     catch{\n//         this.setState({error: 'No Definition Found'})\n//     }\n//     // console.log(this.props.setRedirect())\n// } \n\n\nexport default Search;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/components/Search.js"],"names":["React","Component","MerriamAPI","Search","state","word","handleChange","event","setState","target","value","toLowerCase","handleSubmit","e","preventDefault","search","data","getWordInfo","props","handleUpdate","info","versions","meta","stems","shortdef","partOfSpeech","fl","pronunciation","hwi","prs","mw","setRedirect","path","console","log","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAEzBG,KAFyB,GAEjB;AACNC,MAAAA,IAAI,EAAC;AADC,KAFiB;;AAAA,SAQ7BC,YAR6B,GAQbC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AAACH,QAAAA,IAAI,EAACE,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,WAAnB;AAAN,OAAd;AACD,KAV4B;;AAAA,SAa7BC,YAb6B,GAabC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,MAAL,CAAY,KAAKX,KAAL,CAAWC,IAAvB;AACD,KAhB0B;;AAAA,SAmB3BU,MAnB2B,GAmBlB,MAAOV,IAAP,IAAgB;AAEvB,UAAG;AACC,cAAMW,IAAI,GAAG,MAAMd,UAAU,CAACe,WAAX,CAAuBZ,IAAvB,CAAnB;;AAEA,YAAIW,IAAJ,EAAS;AACL,eAAKE,KAAL,CAAWC,YAAX,CAAwB;AACpBd,YAAAA,IAAI,EAAEA,IADc;AAEpBe,YAAAA,IAAI,EAAEJ,IAFc;AAGpBK,YAAAA,QAAQ,EAAEL,IAAI,CAAC,CAAD,CAAJ,CAAQM,IAAR,CAAaC,KAHH;AAIpBC,YAAAA,QAAQ,EAAER,IAAI,CAAC,CAAD,CAAJ,CAAQQ,QAAR,CAAiB,CAAjB,CAJU;AAKpBC,YAAAA,YAAY,EAAET,IAAI,CAAC,CAAD,CAAJ,CAAQU,EALF;AAMpBC,YAAAA,aAAa,EAAEX,IAAI,CAAC,CAAD,CAAJ,CAAQY,GAAR,CAAYC,GAAZ,CAAgB,CAAhB,EAAmBC;AANd,WAAxB;AAQA,eAAKZ,KAAL,CAAWa,WAAX,CAAuB;AACnBC,YAAAA,IAAI,EAAG,eAAc3B,IAAK;AADP,WAAvB;AAGH,SAZD,MAaI;AACA4B,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;AACJ,OAnBD,CAoBA,MAAK;AACD,aAAK1B,QAAL,CAAc;AAAC2B,UAAAA,KAAK,EAAE;AAAR,SAAd;AACH;AACJ,KA5C4B;AAAA;;AAgD7BC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKxB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKN,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADA,CADF;AAQD;;AAzD0B,C,CA+D/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeH,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass Search extends Component {\n\n      state = {\n        word:'',\n      };\n    \n  \n\n  handleChange = (event) => {\n    this.setState({word:event.target.value.toLowerCase()})\n  }\n  \n  \n  handleSubmit = (e) => {\n      e.preventDefault();\n      this.search(this.state.word);\n    }\n\n\n    search = async (word) => {\n\n      try{\n          const data = await MerriamAPI.getWordInfo(word);\n          \n          if (data){\n              this.props.handleUpdate({\n                  word: word,\n                  info: data,\n                  versions: data[0].meta.stems,\n                  shortdef: data[0].shortdef[0],\n                  partOfSpeech: data[0].fl,\n                  pronunciation: data[0].hwi.prs[0].mw, \n              });\n              this.props.setRedirect({\n                  path: `/definition/${word}`,\n              });\n          }\n          else{\n              console.log('No Definition Found')\n          }\n      }\n      catch{\n          this.setState({error: 'No Definition Found'})\n      }\n  }\n\n  \n  \n  render (){\n      return (\n        <form onSubmit={this.handleSubmit}>\n        <div>\n          <input type=\"text\" onChange={this.handleChange} />\n          <button type=\"submit\">Search</button>\n        </div>\n        </form>\n      );\n    }\n  }\n\n\n\n\n//SECOND ATTEMPT\n// class Search extends Component {\n//   constructor(props){\n//     super(props);\n//       this.state = {\n//         word:'',\n//       };\n//       this.handleChange = this.handleChange.bind(this);\n//       this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n\n//   handleChange = (event) => {\n//     this.setState({word:event.target.value.toLowerCase()})\n//   }\n  \n  \n//   handleSubmit = (e) => {\n//       e.preventDefault();\n//       this.props.search(this.state.word);\n//     }\n  \n  \n//   render (){\n//       return (\n//         <form onSubmit={this.handleSubmit}>\n//         <div>\n//           <input type=\"text\" onChange={this.handleChange} />\n//           <button type=\"submit\">Search</button>\n//         </div>\n//         </form>\n//       );\n//     }\n//   }\n \n\n//FIRST ATTEMPT \n\n//   state = {\n//     error: '',\n// }\n\n\n// search = async (word) => {\n\n//     try{\n//         const data = await MerriamAPI.getWordInfo(word);\n        \n//         if (data){\n//             this.props.handleUpdate({\n//                 word: word,\n//                 info: data,\n//                 versions: data[0].meta.stems,\n//                 shortdef: data[0].shortdef[0],\n//                 partOfSpeech: data[0].fl,\n//                 pronunciation: data[0].hwi.prs[0].mw, \n//             });\n//         // () => {\n//             this.props.setRedirect({\n//                 path: `/definition/${word}`,\n//                 // path: `/definition/${word}`,  \n//             });\n//             // }\n//         }\n//         else{\n//             console.log('No Definition Found')\n//         }\n//     }\n//     catch{\n//         this.setState({error: 'No Definition Found'})\n//     }\n//     // console.log(this.props.setRedirect())\n// } \n\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}