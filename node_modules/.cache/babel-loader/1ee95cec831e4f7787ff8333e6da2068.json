{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/GetWordContainer.js\";\nimport React, { Component } from 'react';\nimport Search from '../components/Search';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass GetWordContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      word: this.props.word,\n      partOfSpeech: this.props.partOfSpeech,\n      versions: this.props.versions,\n      shortdef: this.props.shortdef,\n      pronunciation: this.props.pronunciation,\n      error: ''\n    };\n\n    this.search = async word => {\n      try {\n        const data = await MerriamAPI.getWordInfo(word);\n\n        if (data) {\n          this.props.handleUpdate({\n            word: word,\n            info: data,\n            versions: data[0].meta.stems,\n            shortdef: data[0].shortdef[0],\n            partOfSpeech: data[0].fl,\n            pronunciation: data[0].hwi.prs[0].mw\n          }); // () => {\n\n          this.props.setRedirect({\n            path: `/definition/${word}` // path: `/definition/${word}`,  \n\n          }); // }\n        } else {\n          console.log('No Definition Found');\n        }\n      } catch {\n        this.setState({\n          error: 'No Definition Found'\n        });\n      } // console.log(this.props.setRedirect())\n\n    };\n  }\n\n  render() {\n    //destructure props here  \n    // console.log(this.props)\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      search: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, this.state.word), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, this.state.partOfSpeech), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, this.state.versions.map((v, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 49\n      }\n    }, v))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, this.state.pronunciation), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, this.state.shortdef));\n  }\n\n}\n\nexport default GetWordContainer;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/GetWordContainer.js"],"names":["React","Component","Search","Switch","Route","Link","Redirect","MerriamAPI","GetWordContainer","state","word","props","partOfSpeech","versions","shortdef","pronunciation","error","search","data","getWordInfo","handleUpdate","info","meta","stems","fl","hwi","prs","mw","setRedirect","path","console","log","setState","render","map","v","i"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Search from '../components/Search';\nimport {Switch, Route, Link, Redirect} from 'react-router-dom';\nimport MerriamAPI from '../services/MerriamAPI';\n\n\nclass GetWordContainer extends Component {\n\n  state = {\n    word: this.props.word,\n    partOfSpeech: this.props.partOfSpeech,\n    versions: this.props.versions,\n    shortdef: this.props.shortdef,\n    pronunciation: this.props.pronunciation,\n    error: '',\n  }\n\n\nsearch = async (word) => {\n\n    try{\n        const data = await MerriamAPI.getWordInfo(word);\n        \n        if (data){\n            this.props.handleUpdate({\n                word: word,\n                info: data,\n                versions: data[0].meta.stems,\n                shortdef: data[0].shortdef[0],\n                partOfSpeech: data[0].fl,\n                pronunciation: data[0].hwi.prs[0].mw, \n            });\n        // () => {\n            this.props.setRedirect({\n                path: `/definition/${word}`,\n                // path: `/definition/${word}`,  \n            });\n            // }\n        }\n        else{\n            console.log('No Definition Found')\n        }\n    }\n    catch{\n        this.setState({error: 'No Definition Found'})\n    }\n    // console.log(this.props.setRedirect())\n}\n\n\nrender (){\n\n  //destructure props here  \n\n  // console.log(this.props)\n\n  return (\n\n      <div>\n        <Search search={this.search} />\n        <div>\n             {this.state.word}\n        </div>\n        <div>\n             {this.state.partOfSpeech}\n        </div>\n        <div>\n             {this.state.versions.map((v, i) => <div key={i}>{v}</div>)}\n        </div>\n        <div>\n             {this.state.pronunciation}\n        </div>\n        <div>\n             {this.state.shortdef}\n        </div>\n      </div>\n  );\n  }\n}\n\n export default GetWordContainer;\n\n"]},"metadata":{},"sourceType":"module"}