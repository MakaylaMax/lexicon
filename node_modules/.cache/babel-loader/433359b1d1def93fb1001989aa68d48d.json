{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/GetWordContainer.js\";\nimport React, { Component } from 'react';\nimport Search from '../components/Search';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass GetWordContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      word: '' // partOfSpeech: '',\n      // versions: '',\n      // shortdef: '',\n      // pronunciation: '',\n\n    };\n  }\n\n  render() {\n    const {\n      word\n    } = this.state.word; //destructure props here  \n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      handleUpdate: this.props.handleUpdate,\n      setRedirect: this.props.setRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, word));\n  }\n\n}\n\nexport default GetWordContainer; //  class GetWordContainer extends Component {\n//   state = {\n//     word: this.props.word,\n//     partOfSpeech: this.props.partOfSpeech,\n//     versions: this.props.versions,\n//     shortdef: this.props.shortdef,\n//     pronunciation: this.props.pronunciation\n//   }\n// render (){\n//   const {word, partOfSpeech, versions, shortdef, pronunciation} = this.props,\n//   //destructure props here  \n//   return (\n//       <div>\n//         <Search\n//           handleUpdate={this.props.handleUpdate}\n//           setRedirect={this.props.setRedirect}\n//         />\n//         <div>\n//              {this.state.word}\n//         </div>\n//         <div>\n//              {this.state.partOfSpeech}\n//         </div>\n//         <div>\n//              {this.state.versions.map((v, i) => <div key={i}>{v}</div>)}\n//         </div>\n//         <div>\n//              {this.state.pronunciation}\n//         </div>\n//         <div>\n//              {this.state.shortdef}\n//         </div>\n//       </div>\n//   );\n//   }\n// }\n//  export default GetWordContainer;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/GetWordContainer.js"],"names":["React","Component","Search","Switch","Route","Link","Redirect","MerriamAPI","GetWordContainer","state","word","render","props","handleUpdate","setRedirect"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,QAA7B,QAA4C,kBAA5C;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAGA,MAAMC,gBAAN,SAA+BP,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAEvCQ,KAFuC,GAE/B;AACNC,MAAAA,IAAI,EAAE,EADA,CAEN;AACA;AACA;AACA;;AALM,KAF+B;AAAA;;AAYzCC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAACD,MAAAA;AAAD,QAAS,KAAKD,KAAL,CAAWC,IAA1B,CAFO,CAGP;;AAEA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,YAAY,EAAE,KAAKE,KAAL,CAAWC,YAD3B;AAEE,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,WAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMJ,IADN,CALF,CAFJ;AAwBC;;AAzCsC;;AA4CxC,eAAeF,gBAAf,C,CAMD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {Component} from 'react';\nimport Search from '../components/Search';\nimport {Switch, Route, Link, Redirect} from 'react-router-dom';\nimport MerriamAPI from '../services/MerriamAPI';\n\n\nclass GetWordContainer extends Component {\n\n  state = {\n    word: '',\n    // partOfSpeech: '',\n    // versions: '',\n    // shortdef: '',\n    // pronunciation: '',\n  }\n  \n\n\nrender (){\n\n  const {word} = this.state.word;\n  //destructure props here  \n\n  return (\n\n      <div>\n        <Search\n          handleUpdate={this.props.handleUpdate}\n          setRedirect={this.props.setRedirect}\n        />\n        <div>\n             {word}\n        </div>\n        {/* <div>\n             {partOfSpeech}\n        </div>\n        <div>\n             {versions}\n        </div>\n        <div>\n             {pronunciation}\n        </div>\n        <div>\n             {shortdef}\n        </div> */}\n      </div>\n  );\n  }\n}\n\n export default GetWordContainer;\n\n\n\n\n\n//  class GetWordContainer extends Component {\n\n//   state = {\n//     word: this.props.word,\n//     partOfSpeech: this.props.partOfSpeech,\n//     versions: this.props.versions,\n//     shortdef: this.props.shortdef,\n//     pronunciation: this.props.pronunciation\n//   }\n  \n\n\n// render (){\n\n//   const {word, partOfSpeech, versions, shortdef, pronunciation} = this.props,\n//   //destructure props here  \n\n//   return (\n\n//       <div>\n//         <Search\n//           handleUpdate={this.props.handleUpdate}\n//           setRedirect={this.props.setRedirect}\n//         />\n//         <div>\n//              {this.state.word}\n//         </div>\n//         <div>\n//              {this.state.partOfSpeech}\n//         </div>\n//         <div>\n//              {this.state.versions.map((v, i) => <div key={i}>{v}</div>)}\n//         </div>\n//         <div>\n//              {this.state.pronunciation}\n//         </div>\n//         <div>\n//              {this.state.shortdef}\n//         </div>\n//       </div>\n//   );\n//   }\n// }\n\n//  export default GetWordContainer;"]},"metadata":{},"sourceType":"module"}