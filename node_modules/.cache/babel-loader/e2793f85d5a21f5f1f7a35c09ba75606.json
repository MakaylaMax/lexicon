{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/Home.js\";\nimport React, { Component } from 'react';\nimport Search from '../components/Search';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: ''\n    };\n\n    this.redirectTo = () => `/definition/${word}`;\n\n    this.search = async word => {\n      try {\n        const data = await MerriamAPI.getWordInfo(word);\n\n        if (data) {\n          this.props.handleUpdate({\n            word: word,\n            info: data,\n            versions: data[0].meta.stems,\n            shortdef: data[0].shortdef[0],\n            partOfSpeech: data[0].fl,\n            pronunciation: data[0].hwi.prs[0].mw\n          });\n          this.props.setRedirect({\n            path: `/definition/${word}`\n          });\n        } else {\n          console.log('No Definition Found');\n        }\n      } catch {\n        this.setState({\n          error: 'No Definition Found'\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"My Dictionary\"), /*#__PURE__*/React.createElement(Search, {\n      redirectTo: this.redirectTo,\n      setRedirect: this.props.setRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} //FIRST ATTEMPT \n//     state = {\n//         error: '',\n//     }\n//     search = async (word) => {\n//         try{\n//             const data = await MerriamAPI.getWordInfo(word);\n//             if (data){\n//                 this.props.handleUpdate({\n//                     word: word,\n//                     info: data,\n//                     versions: data[0].meta.stems,\n//                     shortdef: data[0].shortdef[0],\n//                     partOfSpeech: data[0].fl,\n//                     pronunciation: data[0].hwi.prs[0].mw, \n//                 });\n//                 this.props.setRedirect({\n//                     path: `/definition/${word}`,\n//                 });\n//             }\n//             else{\n//                 console.log('No Definition Found')\n//             }\n//         }\n//         catch{\n//             this.setState({error: 'No Definition Found'})\n//         }\n//     }\n// render (){\n//     return (\n//         <div>\n//         <h1>My Dictionary</h1>\n//         <Search search={this.search}/>\n//         </div>\n//     );\n//     }\n// }\n\n\nexport default Home;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/Home.js"],"names":["React","Component","Search","MerriamAPI","Home","state","error","redirectTo","word","search","data","getWordInfo","props","handleUpdate","info","versions","meta","stems","shortdef","partOfSpeech","fl","pronunciation","hwi","prs","mw","setRedirect","path","console","log","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAGzBI,KAHyB,GAGjB;AACJC,MAAAA,KAAK,EAAE;AADH,KAHiB;;AAAA,SAOzBC,UAPyB,GAOZ,MACR,eAAcC,IAAK,EARC;;AAAA,SAWzBC,MAXyB,GAWhB,MAAOD,IAAP,IAAgB;AAErB,UAAG;AACC,cAAME,IAAI,GAAG,MAAMP,UAAU,CAACQ,WAAX,CAAuBH,IAAvB,CAAnB;;AAEA,YAAIE,IAAJ,EAAS;AACL,eAAKE,KAAL,CAAWC,YAAX,CAAwB;AACpBL,YAAAA,IAAI,EAAEA,IADc;AAEpBM,YAAAA,IAAI,EAAEJ,IAFc;AAGpBK,YAAAA,QAAQ,EAAEL,IAAI,CAAC,CAAD,CAAJ,CAAQM,IAAR,CAAaC,KAHH;AAIpBC,YAAAA,QAAQ,EAAER,IAAI,CAAC,CAAD,CAAJ,CAAQQ,QAAR,CAAiB,CAAjB,CAJU;AAKpBC,YAAAA,YAAY,EAAET,IAAI,CAAC,CAAD,CAAJ,CAAQU,EALF;AAMpBC,YAAAA,aAAa,EAAEX,IAAI,CAAC,CAAD,CAAJ,CAAQY,GAAR,CAAYC,GAAZ,CAAgB,CAAhB,EAAmBC;AANd,WAAxB;AAQA,eAAKZ,KAAL,CAAWa,WAAX,CAAuB;AACnBC,YAAAA,IAAI,EAAG,eAAclB,IAAK;AADP,WAAvB;AAGH,SAZD,MAaI;AACAmB,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;AACJ,OAnBD,CAoBA,MAAK;AACD,aAAKC,QAAL,CAAc;AAACvB,UAAAA,KAAK,EAAE;AAAR,SAAd;AACH;AACJ,KApCwB;AAAA;;AAuC7BwB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEA,oBAAC,MAAD;AACI,MAAA,UAAU,EAAE,KAAKvB,UADrB;AAEI,MAAA,WAAW,EAAE,KAAKK,KAAL,CAAWa,WAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ;AASC;;AAjDwB,C,CAsD7B;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,eAAerB,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport Search from '../components/Search';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass Home extends Component {   \n\n\n    state = {\n        error: '',\n    }\n\n    redirectTo = () =>\n        `/definition/${word}`\n\n\n    search = async (word) => {\n\n        try{\n            const data = await MerriamAPI.getWordInfo(word);\n            \n            if (data){\n                this.props.handleUpdate({\n                    word: word,\n                    info: data,\n                    versions: data[0].meta.stems,\n                    shortdef: data[0].shortdef[0],\n                    partOfSpeech: data[0].fl,\n                    pronunciation: data[0].hwi.prs[0].mw, \n                });\n                this.props.setRedirect({\n                    path: `/definition/${word}`,\n                });\n            }\n            else{\n                console.log('No Definition Found')\n            }\n        }\n        catch{\n            this.setState({error: 'No Definition Found'})\n        }\n    }\n \n\nrender (){\n    return (\n        <div>\n        <h1>My Dictionary</h1>\n        <Search \n            redirectTo={this.redirectTo}\n            setRedirect={this.props.setRedirect}\n        />\n        </div>\n    );\n    }\n}\n\n\n\n//FIRST ATTEMPT \n//     state = {\n//         error: '',\n//     }\n\n\n//     search = async (word) => {\n\n//         try{\n//             const data = await MerriamAPI.getWordInfo(word);\n            \n//             if (data){\n//                 this.props.handleUpdate({\n//                     word: word,\n//                     info: data,\n//                     versions: data[0].meta.stems,\n//                     shortdef: data[0].shortdef[0],\n//                     partOfSpeech: data[0].fl,\n//                     pronunciation: data[0].hwi.prs[0].mw, \n//                 });\n//                 this.props.setRedirect({\n//                     path: `/definition/${word}`,\n//                 });\n//             }\n//             else{\n//                 console.log('No Definition Found')\n//             }\n//         }\n//         catch{\n//             this.setState({error: 'No Definition Found'})\n//         }\n//     }\n \n\n// render (){\n//     return (\n//         <div>\n//         <h1>My Dictionary</h1>\n//         <Search search={this.search}/>\n//         </div>\n//     );\n//     }\n// }\n\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}