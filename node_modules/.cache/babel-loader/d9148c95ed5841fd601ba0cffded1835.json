{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/Home.js\";\nimport React, { Component } from 'react';\nimport Search from '../components/Search';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.search = async () => {\n      try {\n        var word = this.state.word.trim();\n        const data = await MerriamAPI.getWordInfo(word);\n\n        if (data) {\n          this.setState({\n            word: this.state.word,\n            info: data[0].shortdef[0]\n          });\n        } else {\n          console.log('No Definition Found');\n        }\n      } catch {\n        this.setState({\n          error: 'No Definition Found'\n        });\n      }\n\n      console.log(this.state.info);\n    };\n\n    this.state = {\n      info: [],\n      word: '',\n      error: ''\n    };\n    this.search = this.search.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"My Dictionary\"), /*#__PURE__*/React.createElement(Search, {\n      search: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, this.state.info, this.state.error));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/Home.js"],"names":["React","Component","Search","MerriamAPI","Home","constructor","search","word","state","trim","data","getWordInfo","setState","info","shortdef","console","log","error","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAEzBI,EAAAA,WAAW,GAAE;AACT;;AADS,SAUbC,MAVa,GAUJ,YAAY;AACjB,UAAG;AACC,YAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAX,CAAgBE,IAAhB,EAAX;AACA,cAAMC,IAAI,GAAG,MAAMP,UAAU,CAACQ,WAAX,CAAuBJ,IAAvB,CAAnB;;AACA,YAAIG,IAAJ,EAAS;AACL,eAAKE,QAAL,CAAc;AACVL,YAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADP;AAEVM,YAAAA,IAAI,EAAEH,IAAI,CAAC,CAAD,CAAJ,CAAQI,QAAR,CAAiB,CAAjB;AAFI,WAAd;AAIH,SALD,MAMI;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;AACJ,OAZD,CAaA,MAAK;AACD,aAAKJ,QAAL,CAAc;AAACK,UAAAA,KAAK,EAAE;AAAR,SAAd;AACH;;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWK,IAAvB;AACH,KA5BY;;AAEP,SAAKL,KAAL,GAAa;AACXK,MAAAA,IAAI,EAAE,EADK;AAEXN,MAAAA,IAAI,EAAE,EAFK;AAGXU,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKF,SAAKX,MAAL,GAAc,KAAKA,MAAL,CAAYY,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAuBPC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEA,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKb,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKE,KAAL,CAAWK,IADjB,EAEM,KAAKL,KAAL,CAAWS,KAFjB,CAHA,CADJ;AAUC;;AA5CwB;;AA+C7B,eAAeb,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport Search from '../components/Search';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass Home extends Component {   \n\n    constructor(){ \n        super();\n          this.state = {\n            info: [],\n            word: '',\n            error: ''\n          };\n        this.search = this.search.bind(this);\n      }\n\n    search = async () => {\n        try{\n            var word = this.state.word.trim();\n            const data = await MerriamAPI.getWordInfo(word);\n            if (data){\n                this.setState({\n                    word: this.state.word,\n                    info: data[0].shortdef[0]\n                })\n            }\n            else{\n                console.log('No Definition Found')\n            }\n        }\n        catch{\n            this.setState({error: 'No Definition Found'})\n        }\n        console.log(this.state.info)\n    }\n \n\nrender (){\n    return (\n        <div>\n        <h1>My Dictionary</h1>\n        <Search search={this.search}/>\n        <div>\n             {this.state.info}\n             {this.state.error}\n        </div>\n        </div>\n    );\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}