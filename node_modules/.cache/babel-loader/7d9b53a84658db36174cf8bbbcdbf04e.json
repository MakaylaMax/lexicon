{"ast":null,"code":"import React, { Component } from 'react';\n\nclass Redirector extends Component {\n  componentDidUpdate() {\n    //console.log('Redirector::componentDidUpdate');\n    const {\n      redirect,\n      location,\n      history,\n      setRedirect\n    } = this.props;\n    const {\n      path,\n      alert\n    } = redirect;\n    if (!path) return;\n\n    if (path !== location.pathname) {\n      //console.log('Redirector::performing redirect to', path);\n      history.push({\n        pathname: path,\n        state: {\n          alert\n        }\n      });\n    } else {\n      //console.log('Redirector:: clearing redirect');\n      setRedirect({});\n      setTimeout(() => history.replace({\n        state: {}\n      }), 4000);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n}\n\nexport default Redirector;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/components/Redirector.js"],"names":["React","Component","Redirector","componentDidUpdate","redirect","location","history","setRedirect","props","path","alert","pathname","push","state","setTimeout","replace","render"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAEjCE,EAAAA,kBAAkB,GAAG;AACnB;AACA,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,OAArB;AAA8BC,MAAAA;AAA9B,QAA6C,KAAKC,KAAxD;AACA,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBN,QAAtB;AAEA,QAAI,CAACK,IAAL,EAAW;;AAEX,QAAIA,IAAI,KAAKJ,QAAQ,CAACM,QAAtB,EAAgC;AAC9B;AACAL,MAAAA,OAAO,CAACM,IAAR,CAAa;AACXD,QAAAA,QAAQ,EAAEF,IADC;AAEXI,QAAAA,KAAK,EAAE;AAACH,UAAAA;AAAD;AAFI,OAAb;AAID,KAND,MAOK;AACH;AACAH,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAO,MAAAA,UAAU,CAAE,MAAMR,OAAO,CAACS,OAAR,CAAgB;AAACF,QAAAA,KAAK,EAAE;AAAR,OAAhB,CAAR,EAAsC,IAAtC,CAAV;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBAAO,yCAAP;AACD;;AAzBgC;;AA4BnC,eAAed,UAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Redirector extends Component {\n\n  componentDidUpdate() {\n    //console.log('Redirector::componentDidUpdate');\n    const {redirect, location, history, setRedirect} = this.props;\n    const {path, alert} = redirect;\n\n    if (!path) return;\n\n    if (path !== location.pathname) {\n      //console.log('Redirector::performing redirect to', path);\n      history.push({\n        pathname: path,\n        state: {alert},\n      })\n    }\n    else {\n      //console.log('Redirector:: clearing redirect');\n      setRedirect({});\n      setTimeout( () => history.replace({state: {}}), 4000);\n    }\n  }\n\n  render() {\n    return <></>;\n  }\n}\n\nexport default Redirector;"]},"metadata":{},"sourceType":"module"}