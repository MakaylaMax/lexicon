{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/GetWordContainer.js\";\nimport React, { Component } from 'react';\nimport Search from '../components/Search';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass GetWordContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      word: this.props.word,\n      info: this.props.info,\n      partOfSpeech: this.props.parOfSpeech,\n      versions: this.props.versions,\n      shortdef: this.props.shortdef,\n      pronunciation: this.props.pronunciation\n    };\n  }\n\n  async componentDidMount() {\n    await console.log(this.state.word);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.word || this.props.word) {\n      this.setState({\n        word: this.props.word\n      });\n    }\n  } // async componentDidMount() {\n  //   await console.log(this.state.word)\n  // }\n  // componentWillReceiveProps() {\n  //   this.setState({ word: this.props.word });  \n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      handleUpdate: this.props.handleUpdate,\n      setRedirect: this.props.setRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, this.state.word), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, this.state.partOfSpeech), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, this.state.versions.map((v, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 49\n      }\n    }, v))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, this.state.pronunciation), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, this.state.shortdef));\n  }\n\n}\n\nexport default GetWordContainer; //FIRST ATTEMPT\n// class GetWordContainer extends Component {\n// render (){\n//   return (\n//       <div>\n//         <Search\n//           handleUpdate={this.props.handleUpdate}\n//           setRedirect={this.props.setRedirect}\n//         />\n//         <div>\n//              {this.props.match.params.word}\n//         </div>\n//         <div>\n//              {this.props.partOfSpeech}\n//         </div>\n//         <div>\n//              {this.props.versions.map((v, i) => <div key={i}>{v}</div>)}\n//         </div>\n//         <div>\n//              {this.props.pronunciation}\n//         </div>\n//         <div>\n//              {this.props.shortdef}\n//         </div>\n//       </div>\n//   );\n//   }\n// }\n//  export default GetWordContainer;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/pages/GetWordContainer.js"],"names":["React","Component","Search","MerriamAPI","GetWordContainer","state","word","props","info","partOfSpeech","parOfSpeech","versions","shortdef","pronunciation","componentDidMount","console","log","componentDidUpdate","prevProps","setState","render","handleUpdate","setRedirect","map","v","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAEzCI,KAFyC,GAEjC;AACNC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADX;AAENE,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAFX;AAGNC,MAAAA,YAAY,EAAE,KAAKF,KAAL,CAAWG,WAHnB;AAINC,MAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,QAJf;AAKNC,MAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK,QALf;AAMNC,MAAAA,aAAa,EAAE,KAAKN,KAAL,CAAWM;AANpB,KAFiC;AAAA;;AAWzC,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,IAAvB,CAAN;AACD;;AAEDW,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACZ,IAAV,IAAkB,KAAKC,KAAL,CAAWD,IAAjC,EAAsC;AAClC,WAAKa,QAAL,CAAc;AAACb,QAAAA,IAAI,EAAC,KAAKC,KAAL,CAAWD;AAAjB,OAAd;AACD;AACF,GAnBsC,CAsBzC;AACA;AACA;AAEA;AACA;AACA;;;AAGAc,EAAAA,MAAM,GAAG;AAEP,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,YAAY,EAAE,KAAKb,KAAL,CAAWc,YAD3B;AAEE,MAAA,WAAW,EAAE,KAAKd,KAAL,CAAWe,WAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKjB,KAAL,CAAWC,IADjB,CALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKD,KAAL,CAAWI,YADjB,CARF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKJ,KAAL,CAAWM,QAAX,CAAoBY,GAApB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,kBAAU;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcD,CAAd,CAAlC,CADN,CAXF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKnB,KAAL,CAAWQ,aADjB,CAdF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKR,KAAL,CAAWO,QADjB,CAjBF,CAFJ;AAwBC;;AAzDsC;;AA4DxC,eAAeR,gBAAf,C,CAID;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {Component} from 'react';\nimport Search from '../components/Search';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass GetWordContainer extends Component {\n\nstate = {\n  word: this.props.word,\n  info: this.props.info,\n  partOfSpeech: this.props.parOfSpeech,\n  versions: this.props.versions,\n  shortdef: this.props.shortdef,\n  pronunciation: this.props.pronunciation,\n}\n\nasync componentDidMount() {\n  await console.log(this.state.word)\n}\n\ncomponentDidUpdate(prevProps) {\n  if (prevProps.word || this.props.word){\n      this.setState({word:this.props.word})\n    }\n  }\n\n\n// async componentDidMount() {\n//   await console.log(this.state.word)\n// }\n\n// componentWillReceiveProps() {\n//   this.setState({ word: this.props.word });  \n// }\n\n\nrender (){\n\n  return (\n\n      <div>\n        <Search\n          handleUpdate={this.props.handleUpdate}\n          setRedirect={this.props.setRedirect}\n        />\n        <div>\n             {this.state.word}\n        </div>\n        <div>\n             {this.state.partOfSpeech}\n        </div>\n        <div>\n             {this.state.versions.map((v, i) => <div key={i}>{v}</div>)}\n        </div>\n        <div>\n             {this.state.pronunciation}\n        </div>\n        <div>\n             {this.state.shortdef}\n        </div>\n      </div>\n  );\n  }\n}\n\n export default GetWordContainer;\n  \n\n\n//FIRST ATTEMPT\n// class GetWordContainer extends Component {\n\n// render (){\n  \n//   return (\n\n//       <div>\n//         <Search\n//           handleUpdate={this.props.handleUpdate}\n//           setRedirect={this.props.setRedirect}\n//         />\n//         <div>\n//              {this.props.match.params.word}\n//         </div>\n//         <div>\n//              {this.props.partOfSpeech}\n//         </div>\n//         <div>\n//              {this.props.versions.map((v, i) => <div key={i}>{v}</div>)}\n//         </div>\n//         <div>\n//              {this.props.pronunciation}\n//         </div>\n//         <div>\n//              {this.props.shortdef}\n//         </div>\n//       </div>\n//   );\n//   }\n// }\n\n//  export default GetWordContainer;\n\n\n\n"]},"metadata":{},"sourceType":"module"}