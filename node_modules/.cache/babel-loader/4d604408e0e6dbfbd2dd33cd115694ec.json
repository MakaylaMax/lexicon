{"ast":null,"code":"const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json'; // const collectionUrl = `${baseUrl}/jovial?key=${apiKey}`;\n// const index = () => {\n//     return fetch(collectionUrl)\n//         .then(response=>response.json());\n// }\n\nconst handleAPIErrors = response => {};\n\nfunction getQueryParams(params) {\n  params[\"key\"] = apiKey;\n  var pairs = Object.keys(params).map(function (key) {\n    var result = key + \"=\" + params[key];\n    return result;\n  });\n  var urlParams = pairs.reduce(function (prev, next) {\n    return prev + \"&\" + next;\n  });\n  return urlParams;\n}\n\nfunction prepareUrl(word, params) {\n  var url = baseUrl + \"/\" + `${word}` + \"?\" + getQueryParams(params);\n  return url;\n} //rewrite\n// function callWord(word, params){\n//     var url = prepareUrl(word, params);\n//     console.log(url)\n//     return fetch(url).then(response => response.json());\n// }\n// function getDefinitions(word){\n//     var params = {}\n//     return callWord(word, params)\n// }\n\n\nfunction getWordInfo(word, params) {\n  var url = prepareUrl(word, params); // return (getDefinitions(word));\n\n  return fetch(url).then(response => response.json());\n}\n\nconst MerriamAPI = {\n  // index,\n  // getDefinitions,\n  getWordInfo\n};\nexport default MerriamAPI;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/services/MerriamAPI.js"],"names":["apiKey","process","env","REACT_APP_MERRIAM_API_KEY","baseUrl","handleAPIErrors","response","getQueryParams","params","pairs","Object","keys","map","key","result","urlParams","reduce","prev","next","prepareUrl","word","url","getWordInfo","fetch","then","json","MerriamAPI"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA3B;AACA,MAAMC,OAAO,GAAG,iEAAhB,C,CACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAGC,QAAQ,IAAI,CAEnC,CAFD;;AAIA,SAASC,cAAT,CAAwBC,MAAxB,EAA+B;AAC3BA,EAAAA,MAAM,CAAC,KAAD,CAAN,GAAgBR,MAAhB;AACI,MAAIS,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,GAApB,CAAwB,UAASC,GAAT,EAAa;AAC7C,QAAIC,MAAM,GAAGD,GAAG,GAAG,GAAN,GAAYL,MAAM,CAACK,GAAD,CAA/B;AACA,WAAOC,MAAP;AACH,GAHW,CAAZ;AAIA,MAAIC,SAAS,GAAGN,KAAK,CAACO,MAAN,CAAa,UAASC,IAAT,EAAcC,IAAd,EAAmB;AAC5C,WAAOD,IAAI,GAAG,GAAP,GAAaC,IAApB;AACH,GAFe,CAAhB;AAGJ,SAAOH,SAAP;AACH;;AAED,SAASI,UAAT,CAAoBC,IAApB,EAA0BZ,MAA1B,EAAiC;AAC7B,MAAIa,GAAG,GAAGjB,OAAO,GAAG,GAAV,GAAiB,GAAEgB,IAAK,EAAxB,GAA4B,GAA5B,GAAkCb,cAAc,CAACC,MAAD,CAA1D;AACA,SAAOa,GAAP;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,SAASC,WAAT,CAAqBF,IAArB,EAA2BZ,MAA3B,EAAkC;AAC9B,MAAIa,GAAG,GAAGF,UAAU,CAACC,IAAD,EAAOZ,MAAP,CAApB,CAD8B,CAE9B;;AACA,SAAOe,KAAK,CAACF,GAAD,CAAL,CAAWG,IAAX,CAAgBlB,QAAQ,IAAIA,QAAQ,CAACmB,IAAT,EAA5B,CAAP;AACH;;AAED,MAAMC,UAAU,GAAG;AACf;AACA;AACAJ,EAAAA;AAHe,CAAnB;AAMA,eAAeI,UAAf","sourcesContent":["const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json';\n// const collectionUrl = `${baseUrl}/jovial?key=${apiKey}`;\n\n// const index = () => {\n//     return fetch(collectionUrl)\n//         .then(response=>response.json());\n// }\n\nconst handleAPIErrors = response => {\n\n}\n\nfunction getQueryParams(params){\n    params[\"key\"] = apiKey;\n        var pairs = Object.keys(params).map(function(key){\n            var result = key + \"=\" + params[key];\n            return result;\n        }) \n        var urlParams = pairs.reduce(function(prev,next){\n            return prev + \"&\" + next\n        })  \n    return urlParams\n}\n\nfunction prepareUrl(word, params){\n    var url = baseUrl + \"/\" + `${word}` + \"?\" + getQueryParams(params);\n    return url\n}\n\n//rewrite\n// function callWord(word, params){\n//     var url = prepareUrl(word, params);\n//     console.log(url)\n//     return fetch(url).then(response => response.json());\n// }\n\n// function getDefinitions(word){\n//     var params = {}\n//     return callWord(word, params)\n// }\n\nfunction getWordInfo(word, params){\n    var url = prepareUrl(word, params);\n    // return (getDefinitions(word));\n    return fetch(url).then(response => response.json());\n}\n\nconst MerriamAPI = {\n    // index,\n    // getDefinitions,\n    getWordInfo,\n}\n\nexport default MerriamAPI;"]},"metadata":{},"sourceType":"module"}