{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/components/Search.js\";\nimport React, { Component } from 'react';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: [] // word: '',\n      // info: [],\n      // error: ''\n\n    };\n\n    this.handleChange = event => {\n      this.props.setWord({ ...this.props.monster[event.target.value]\n      });\n    };\n\n    this.handleSubmit = async e => {\n      try {\n        e.preventDefault();\n        const data = await this.props.callApi();\n\n        if (data) {\n          this.props.setRedirect({\n            path: this.props.redirectTo(data),\n            alert: this.props.redirectNotice\n          });\n        } else {\n          this.setState({\n            errors\n          });\n        }\n      } catch {\n        console.log('errors');\n      }\n    };\n  }\n\n  // handleChange = (event) => {\n  //   this.setState({word:event.target.value.toLowerCase()})\n  // }\n  // handleSubmit = async (e) => {\n  //   try {\n  //     e.preventDefault();\n  //     var word = this.state.word.trim();\n  //     const data = await MerriamAPI.getWordInfo(word);\n  //     if (data){\n  //       this.setState({info: data[0].shortdef[0]})\n  //     }\n  //     else {\n  //       console.log('No Definition Found')\n  //     }\n  //   }\n  //   catch{\n  //     this.setState({error: 'No Definition Found'})\n  //   }\n  // console.log(this.state.info[0].meta.id)\n  // console.log(this.state.info[0].shortdef)\n  // }\n  render() {\n    const {\n      word\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: word,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Search\"))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/components/Search.js"],"names":["React","Component","MerriamAPI","Search","state","errors","handleChange","event","props","setWord","monster","target","value","handleSubmit","e","preventDefault","data","callApi","setRedirect","path","redirectTo","alert","redirectNotice","setState","console","log","render","word"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE/BG,KAF+B,GAEvB;AACNC,MAAAA,MAAM,EAAE,EADF,CAEN;AACA;AACA;;AAJM,KAFuB;;AAAA,SAS/BC,YAT+B,GASfC,KAAD,IAAW;AACxB,WAAKC,KAAL,CAAWC,OAAX,CAAmB,EACjB,GAAG,KAAKD,KAAL,CAAWE,OAAX,CAAmBH,KAAK,CAACI,MAAN,CAAaC,KAAhC;AADc,OAAnB;AAGD,KAb8B;;AAAA,SAgB/BC,YAhB+B,GAgBhB,MAAOC,CAAP,IAAa;AAC1B,UAAI;AACFA,QAAAA,CAAC,CAACC,cAAF;AACA,cAAMC,IAAI,GAAG,MAAM,KAAKR,KAAL,CAAWS,OAAX,EAAnB;;AACA,YAAID,IAAJ,EAAS;AACP,eAAKR,KAAL,CAAWU,WAAX,CAAuB;AACrBC,YAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWY,UAAX,CAAsBJ,IAAtB,CADe;AAErBK,YAAAA,KAAK,EAAE,KAAKb,KAAL,CAAWc;AAFG,WAAvB;AAID,SALD,MAMK;AACH,eAAKC,QAAL,CAAc;AAAClB,YAAAA;AAAD,WAAd;AACD;AACF,OAZD,CAaA,MAAK;AACHmB,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AACF,KAjC8B;AAAA;;AAoC/B;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACF;AAIAC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAS,KAAKnB,KAApB;AACA,wBACE,uDACA;AAAM,MAAA,QAAQ,EAAE,KAAKK,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,YAAY,EAAEc,IAAjC;AAAuC,MAAA,QAAQ,EAAE,KAAKrB,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CATA,CADA,CADF;AAwBD;;AAxF4B;;AA2F/B,eAAeH,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass Search extends Component {\n\nstate = {\n  errors: []\n  // word: '',\n  // info: [],\n  // error: ''\n}\n\nhandleChange = (event) => {\n  this.props.setWord({\n    ...this.props.monster[event.target.value]\n  });\n}\n\n\nhandleSubmit = async (e) => {\n  try {\n    e.preventDefault();\n    const data = await this.props.callApi();\n    if (data){\n      this.props.setRedirect({\n        path: this.props.redirectTo(data),\n        alert: this.props.redirectNotice\n      });\n    }\n    else {\n      this.setState({errors});\n    }\n  }\n  catch{\n    console.log('errors');\n  }\n}\n\n\n// handleChange = (event) => {\n//   this.setState({word:event.target.value.toLowerCase()})\n// }\n\n\n// handleSubmit = async (e) => {\n//   try {\n//     e.preventDefault();\n//     var word = this.state.word.trim();\n//     const data = await MerriamAPI.getWordInfo(word);\n//     if (data){\n//       this.setState({info: data[0].shortdef[0]})\n//     }\n//     else {\n//       console.log('No Definition Found')\n//     }\n//   }\n//   catch{\n//     this.setState({error: 'No Definition Found'})\n//   }\n  // console.log(this.state.info[0].meta.id)\n  // console.log(this.state.info[0].shortdef)\n// }\n\n\n  \nrender (){\n    const {word} = this.props;\n    return (\n      <>\n      <form onSubmit={this.handleSubmit}>\n      {/* {!this.state.errors.length ? null :\n        <div className=\"alert alert-warning\">\n          <h2>{this.state.errors.length} error(s) prohibited this word from being searched</h2>\n          <ul>\n            { this.state.errors.map( (m, i) => <li key={i}>{m}</li> ) }\n          </ul>\n        </div>\n      } */}\n      <div>\n        <input type=\"text\" defaultValue={word} onChange={this.handleChange}/>\n        <button type=\"submit\">Search</button>\n        {/* <p>Definition:</p>\n        <div>\n          {this.state.info}\n          {this.state.error}\n          {this.state.info.map((info) => <p key={info[0].meta.id}>{...info}</p>)} \n        </div> */}\n      </div>\n      </form>\n      </>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}