{"ast":null,"code":"var _jsxFileName = \"/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/components/WordDetails.js\";\nimport React, { Component } from 'react';\nimport MerriamAPI from '../services/MerriamAPI';\n\nclass WordDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentWord: {},\n      info: [],\n      partOfSpeech: [],\n      versions: [],\n      shortdef: \"\",\n      pronunciation: \"\",\n      error: ''\n    };\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const id = this.props.currentWord.word;\n\n    if (id !== prevProps.currentWord.word) {\n      const current = await MerriamAPI.getWordInfo(id);\n      this.setState({\n        currentWord: id,\n        info: current,\n        versions: current[0].meta.stems,\n        shortdef: current[0].shortdef[0],\n        partOfSpeech: current[0].fl,\n        pronunciation: current[0].hwi.prs[0].mw,\n        error: ''\n      });\n    } // console.log(`update state: ${this.state.currentWord.word}`);\n    // console.log(this.state.faves);\n    // console.log(this.state.faves.some(fave => fave.word === this.state.currentWord))\n\n  }\n\n  render() {\n    let detail;\n\n    if (this.state.currentWord != null) {\n      detail = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, \"part of speech:\"), \" \", this.state.partOfSpeech), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, \"pronunciation:\"), \" \", this.state.pronunciation), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, \"definition:\"), \"  \", this.state.shortdef), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, \"versions:\"), \"  \", this.state.versions.map((v, i) => /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 70\n        }\n      }, v))));\n    } else detail = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"No word selected\"));\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, detail);\n  }\n\n}\n\n;\nexport default WordDetails;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/components/WordDetails.js"],"names":["React","Component","MerriamAPI","WordDetails","state","currentWord","info","partOfSpeech","versions","shortdef","pronunciation","error","componentDidUpdate","prevProps","prevState","id","props","word","current","getWordInfo","setState","meta","stems","fl","hwi","prs","mw","render","detail","map","v","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAGA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAElCG,KAFkC,GAE1B;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,YAAY,EAAE,EAHV;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,QAAQ,EAAE,EALN;AAMJC,MAAAA,aAAa,EAAE,EANX;AAOJC,MAAAA,KAAK,EAAE;AAPH,KAF0B;AAAA;;AAYlC,QAAMC,kBAAN,CAAyBC,SAAzB,EAAoCC,SAApC,EAA+C;AAC7C,UAAMC,EAAE,GAAG,KAAKC,KAAL,CAAWX,WAAX,CAAuBY,IAAlC;;AACA,QAAIF,EAAE,KAAKF,SAAS,CAACR,WAAV,CAAsBY,IAAjC,EAAuC;AACrC,YAAMC,OAAO,GAAG,MAAMhB,UAAU,CAACiB,WAAX,CAAuBJ,EAAvB,CAAtB;AACA,WAAKK,QAAL,CAAc;AACZf,QAAAA,WAAW,EAAEU,EADD;AAEZT,QAAAA,IAAI,EAAEY,OAFM;AAGZV,QAAAA,QAAQ,EAAEU,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAX,CAAgBC,KAHd;AAIZb,QAAAA,QAAQ,EAAES,OAAO,CAAC,CAAD,CAAP,CAAWT,QAAX,CAAoB,CAApB,CAJE;AAKZF,QAAAA,YAAY,EAAEW,OAAO,CAAC,CAAD,CAAP,CAAWK,EALb;AAMZb,QAAAA,aAAa,EAAEQ,OAAO,CAAC,CAAD,CAAP,CAAWM,GAAX,CAAeC,GAAf,CAAmB,CAAnB,EAAsBC,EANzB;AAOZf,QAAAA,KAAK,EAAE;AAPK,OAAd;AASD,KAb4C,CAc7C;AACA;AACA;;AACD;;AAIHgB,EAAAA,MAAM,GAAE;AACJ,QAAIC,MAAJ;;AACA,QAAI,KAAKxB,KAAL,CAAWC,WAAX,IAA0B,IAA9B,EAAmC;AAC/BuB,MAAAA,MAAM,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,OAC4B,KAAKxB,KAAL,CAAWG,YADvC,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,OAC2B,KAAKH,KAAL,CAAWM,aADtC,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,QACyB,KAAKN,KAAL,CAAWK,QADpC,CAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,QACuB,KAAKL,KAAL,CAAWI,QAAX,CAAoBqB,GAApB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,kBAAU;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAcD,CAAd,CAAlC,CADvB,CAVJ,CADA;AAeH,KAhBD,MAkBIF,MAAM,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ;;AAKJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,MADL,CADJ;AAKD;;AA/DiC;;AAgEnC;AAED,eAAezB,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport MerriamAPI from '../services/MerriamAPI';\n\n\nclass WordDetails extends Component {\n\n  state = {\n      currentWord: {},\n      info: [],\n      partOfSpeech: [],\n      versions: [],\n      shortdef: \"\",\n      pronunciation: \"\",\n      error: '',\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    const id = this.props.currentWord.word;\n    if (id !== prevProps.currentWord.word) {\n      const current = await MerriamAPI.getWordInfo(id);\n      this.setState({ \n        currentWord: id,\n        info: current,\n        versions: current[0].meta.stems,\n        shortdef: current[0].shortdef[0],\n        partOfSpeech: current[0].fl,\n        pronunciation: current[0].hwi.prs[0].mw, \n        error: '',\n       });\n    }\n    // console.log(`update state: ${this.state.currentWord.word}`);\n    // console.log(this.state.faves);\n    // console.log(this.state.faves.some(fave => fave.word === this.state.currentWord))\n  }\n\n  \n\nrender(){\n    let detail; \n    if (this.state.currentWord != null){\n        detail = \n        <div>\n            <div>      \n                <b>part of speech:</b> {this.state.partOfSpeech}\n            </div>\n            <div>\n                <b>pronunciation:</b> {this.state.pronunciation}\n            </div>\n            <div>\n                <b>definition:</b>  {this.state.shortdef}\n            </div>\n            <div>\n                <b>versions:</b>  {this.state.versions.map((v, i) => <div key={i}>{v}</div>)}\n            </div>\n        </div>\n    }\n    else \n        detail = \n            <div>\n                <div>No word selected</div>\n            </div>\n    \n    return (\n        <div>\n            {detail}\n        </div>\n    );\n  } \n};\n\nexport default WordDetails;"]},"metadata":{},"sourceType":"module"}