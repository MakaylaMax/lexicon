{"ast":null,"code":"const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json';\nconst collectionUrl = `${baseUrl}/jovial?key=${apiKey}`;\n\nconst index = () => {\n  return fetch(collectionUrl).then(response => response.json());\n}; // const handleAPIErrors = response => {\n// }\n// function prepWord(word){\n//     return encodeURIComponent(word)\n//   }\n// var utils = {\n//     prepWord: prepWord,\n// }\n// function getQueryParams(params){\n//     params[\"api_key\"] = apiKey;\n//         var pairs = Object.keys(params).map(function(key){\n//             var result = key + \"=\" + params[key];\n//             return result;\n//         }) \n//         var urlParams = pairs.reduce(function(prev,next){\n//             return prev + \"&\" + next\n//         })  \n//     return urlParams\n// }\n// function prepareUrl(word, params){\n//     var url = baseUrl + \"/\" + utils.prepWord(word) + \"?\" + getQueryParams(params);\n//     return url\n// }\n//rewrite\n// function callWord(word, params){\n//     var url = prepareUrl(word, params);\n//     return fetch(url).then(response => response.json());\n// }\n// function getDefinitions(word){\n//     var params = {}\n//     return callWord(word, params)\n// }\n// function getWordInfo(word){\n//     var meta = {}\n//     return fetch([getDefinitions(word)]).then(\n//         props.spread(function(definitions){\n//         meta.definitions = definitions;\n//         return meta\n//         })\n//     )\n// }\n//start\n// function callWord(word, params){\n//     var url = prepareUrl(word, params);\n//     return axios.get(url).then(function(response){\n//       return response.data\n//     })\n//   }\n// function getDefinitions(word){\n//     var params = {}\n//     return callWord(word, params)\n// }\n// function getWordInfo(word){\n//     var meta = {}\n//     return axios.all([getDefinitions(word)]).then(\n//         axios.spread(function(definitions){\n//         meta.definitions = definitions;\n//         return meta\n//         })\n//     )\n// }\n//end\n\n\nconst MerriamAPI = {\n  index // getDefinitions,\n  // getWordInfo\n\n};\nexport default MerriamAPI;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/services/MerriamAPI.js"],"names":["apiKey","process","env","REACT_APP_MERRIAM_API_KEY","baseUrl","collectionUrl","index","fetch","then","response","json","MerriamAPI"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA3B;AACA,MAAMC,OAAO,GAAG,iEAAhB;AACA,MAAMC,aAAa,GAAI,GAAED,OAAQ,eAAcJ,MAAO,EAAtD;;AAEA,MAAMM,KAAK,GAAG,MAAM;AAChB,SAAOC,KAAK,CAACF,aAAD,CAAL,CACFG,IADE,CACGC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADb,CAAP;AAEH,CAHD,C,CAKA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,UAAU,GAAG;AACfL,EAAAA,KADe,CAEf;AACA;;AAHe,CAAnB;AAMA,eAAeK,UAAf","sourcesContent":["const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json';\nconst collectionUrl = `${baseUrl}/jovial?key=${apiKey}`;\n\nconst index = () => {\n    return fetch(collectionUrl)\n        .then(response=>response.json());\n}\n\n// const handleAPIErrors = response => {\n\n// }\n\n// function prepWord(word){\n//     return encodeURIComponent(word)\n//   }\n  \n// var utils = {\n//     prepWord: prepWord,\n// }\n\n// function getQueryParams(params){\n//     params[\"api_key\"] = apiKey;\n//         var pairs = Object.keys(params).map(function(key){\n//             var result = key + \"=\" + params[key];\n//             return result;\n//         }) \n//         var urlParams = pairs.reduce(function(prev,next){\n//             return prev + \"&\" + next\n//         })  \n//     return urlParams\n// }\n\n// function prepareUrl(word, params){\n//     var url = baseUrl + \"/\" + utils.prepWord(word) + \"?\" + getQueryParams(params);\n//     return url\n// }\n\n//rewrite\n// function callWord(word, params){\n//     var url = prepareUrl(word, params);\n//     return fetch(url).then(response => response.json());\n// }\n\n// function getDefinitions(word){\n//     var params = {}\n//     return callWord(word, params)\n// }\n\n// function getWordInfo(word){\n//     var meta = {}\n//     return fetch([getDefinitions(word)]).then(\n//         props.spread(function(definitions){\n//         meta.definitions = definitions;\n//         return meta\n//         })\n//     )\n// }\n\n//start\n// function callWord(word, params){\n//     var url = prepareUrl(word, params);\n//     return axios.get(url).then(function(response){\n//       return response.data\n//     })\n//   }\n  \n// function getDefinitions(word){\n//     var params = {}\n//     return callWord(word, params)\n// }\n\n// function getWordInfo(word){\n//     var meta = {}\n//     return axios.all([getDefinitions(word)]).then(\n//         axios.spread(function(definitions){\n//         meta.definitions = definitions;\n//         return meta\n//         })\n//     )\n// }\n//end\n\nconst MerriamAPI = {\n    index,\n    // getDefinitions,\n    // getWordInfo\n}\n\nexport default MerriamAPI;"]},"metadata":{},"sourceType":"module"}