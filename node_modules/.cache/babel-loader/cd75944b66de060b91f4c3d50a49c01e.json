{"ast":null,"code":"const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json';\n\nconst handleAPIErrors = response => {\n  if (!response.ok) {\n    return response.json().then(data => {\n      return {\n        errors: data.error\n      };\n    });\n  }\n\n  return response.json().then(data => ({\n    data\n  }));\n};\n\nfunction prepareUrl(word) {\n  var url = baseUrl + \"/\" + word + \"?\" + \"key=\" + apiKey;\n  return url;\n}\n\nfunction getWordInfo(word) {\n  var url = prepareUrl(word); // return fetch(url).then(response => response.json());\n\n  return fetch(url).then(handleAPIErrors);\n}\n\nconst MerriamAPI = {\n  getWordInfo\n};\nexport default MerriamAPI;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/services/MerriamAPI.js"],"names":["apiKey","process","env","REACT_APP_MERRIAM_API_KEY","baseUrl","handleAPIErrors","response","ok","json","then","data","errors","error","prepareUrl","word","url","getWordInfo","fetch","MerriamAPI"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA3B;AACA,MAAMC,OAAO,GAAG,iEAAhB;;AAEA,MAAMC,eAAe,GAAGC,QAAQ,IAAI;AAChC,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,WAAOD,QAAQ,CAACE,IAAT,GAAgBC,IAAhB,CAAqBC,IAAI,IAAG;AACjC,aAAO;AAACC,QAAAA,MAAM,EAAED,IAAI,CAACE;AAAd,OAAP;AACD,KAFM,CAAP;AAGD;;AACD,SAAON,QAAQ,CAACE,IAAT,GAAgBC,IAAhB,CAAqBC,IAAI,KAAK;AAACA,IAAAA;AAAD,GAAL,CAAzB,CAAP;AACD,CAPH;;AASA,SAASG,UAAT,CAAoBC,IAApB,EAAyB;AACrB,MAAIC,GAAG,GAAGX,OAAO,GAAG,GAAV,GAAgBU,IAAhB,GAAuB,GAAvB,GAA6B,MAA7B,GAAsCd,MAAhD;AACA,SAAOe,GAAP;AACH;;AAGD,SAASC,WAAT,CAAqBF,IAArB,EAA0B;AACtB,MAAIC,GAAG,GAAGF,UAAU,CAACC,IAAD,CAApB,CADsB,CAEtB;;AACA,SAAOG,KAAK,CAACF,GAAD,CAAL,CAAWN,IAAX,CAAgBJ,eAAhB,CAAP;AACH;;AAGD,MAAMa,UAAU,GAAG;AACfF,EAAAA;AADe,CAAnB;AAIA,eAAeE,UAAf","sourcesContent":["const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json';\n\nconst handleAPIErrors = response => {\n    if (!response.ok) {\n      return response.json().then(data =>{\n        return {errors: data.error}\n      })\n    }\n    return response.json().then(data => ({data}));\n  }\n\nfunction prepareUrl(word){\n    var url = baseUrl + \"/\" + word + \"?\" + \"key=\" + apiKey;\n    return url\n}\n\n\nfunction getWordInfo(word){\n    var url = prepareUrl(word);\n    // return fetch(url).then(response => response.json());\n    return fetch(url).then(handleAPIErrors);\n}\n\n\nconst MerriamAPI = {\n    getWordInfo,\n}\n\nexport default MerriamAPI;"]},"metadata":{},"sourceType":"module"}