{"ast":null,"code":"const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json/'; // const collectionUrl = `${baseUrl}/jovial?key=${apiKey}`;\n\nconst handleAPIErrors = response => {};\n\nfunction prepWord(word) {\n  return encodeURIComponent(word);\n}\n\nvar utils = {\n  prepWord: prepWord\n};\n\nfunction getQueryParams(params) {\n  params[\"api_key\"] = apiKey;\n  var pairs = Object.keys(params).map(function (key) {\n    var result = key + \"=\" + params[key];\n    return result;\n  });\n  var urlParams = pairs.reduce(function (prev, next) {\n    return prev + \"&\" + next;\n  });\n  return urlParams;\n}\n\nfunction prepareUrl(word, params) {\n  var url = baseUrl + \"/\" + utils.prepWord(word) + \"?\" + getQueryParams(params);\n  return url;\n} //start\n\n\nfunction callWord(word, params) {\n  var url = prepareUrl(word, params);\n  return axios.get(url).then(function (response) {\n    return response.data;\n  });\n}\n\nfunction getDefinitions(word) {\n  var params = {};\n  return callWord(word, params);\n}\n\nfunction getWordInfo(word) {\n  var meta = {};\n  return axios.all([getDefinitions(word)]).then(axios.spread(function (definitions) {\n    meta.definitions = definitions;\n    return meta;\n  }));\n} //end\n// const index = () =>{\n//     return fetch(collectionUrl)\n//         .then(response=>response.json());\n// }\n\n\nconst MerriamAPI = {\n  // index,\n  getDefinitions,\n  getWordInfo\n};\nexport default MerriamAPI;","map":{"version":3,"sources":["/Users/makaylamaxwell/Documents/dev/Final/my-final-project/src/services/MerriamAPI.js"],"names":["apiKey","process","env","REACT_APP_MERRIAM_API_KEY","baseUrl","handleAPIErrors","response","prepWord","word","encodeURIComponent","utils","getQueryParams","params","pairs","Object","keys","map","key","result","urlParams","reduce","prev","next","prepareUrl","url","callWord","axios","get","then","data","getDefinitions","getWordInfo","meta","all","spread","definitions","MerriamAPI"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA3B;AACA,MAAMC,OAAO,GAAG,kEAAhB,C,CACA;;AAEA,MAAMC,eAAe,GAAGC,QAAQ,IAAI,CAEnC,CAFD;;AAIA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB;AACnB,SAAOC,kBAAkB,CAACD,IAAD,CAAzB;AACD;;AAEH,IAAIE,KAAK,GAAG;AACRH,EAAAA,QAAQ,EAAEA;AADF,CAAZ;;AAIA,SAASI,cAAT,CAAwBC,MAAxB,EAA+B;AAC3BA,EAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBZ,MAApB;AACI,MAAIa,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,GAApB,CAAwB,UAASC,GAAT,EAAa;AAC7C,QAAIC,MAAM,GAAGD,GAAG,GAAG,GAAN,GAAYL,MAAM,CAACK,GAAD,CAA/B;AACA,WAAOC,MAAP;AACH,GAHW,CAAZ;AAIA,MAAIC,SAAS,GAAGN,KAAK,CAACO,MAAN,CAAa,UAASC,IAAT,EAAcC,IAAd,EAAmB;AAC5C,WAAOD,IAAI,GAAG,GAAP,GAAaC,IAApB;AACH,GAFe,CAAhB;AAGJ,SAAOH,SAAP;AACH;;AAED,SAASI,UAAT,CAAoBf,IAApB,EAA0BI,MAA1B,EAAiC;AAC7B,MAAIY,GAAG,GAAGpB,OAAO,GAAG,GAAV,GAAgBM,KAAK,CAACH,QAAN,CAAeC,IAAf,CAAhB,GAAuC,GAAvC,GAA6CG,cAAc,CAACC,MAAD,CAArE;AACA,SAAOY,GAAP;AACH,C,CAED;;;AACA,SAASC,QAAT,CAAkBjB,IAAlB,EAAwBI,MAAxB,EAA+B;AAC3B,MAAIY,GAAG,GAAGD,UAAU,CAACf,IAAD,EAAOI,MAAP,CAApB;AACA,SAAOc,KAAK,CAACC,GAAN,CAAUH,GAAV,EAAeI,IAAf,CAAoB,UAAStB,QAAT,EAAkB;AAC3C,WAAOA,QAAQ,CAACuB,IAAhB;AACD,GAFM,CAAP;AAGD;;AAEH,SAASC,cAAT,CAAwBtB,IAAxB,EAA6B;AACzB,MAAII,MAAM,GAAG,EAAb;AACA,SAAOa,QAAQ,CAACjB,IAAD,EAAOI,MAAP,CAAf;AACH;;AAED,SAASmB,WAAT,CAAqBvB,IAArB,EAA0B;AACtB,MAAIwB,IAAI,GAAG,EAAX;AACA,SAAON,KAAK,CAACO,GAAN,CAAU,CAACH,cAAc,CAACtB,IAAD,CAAf,CAAV,EAAkCoB,IAAlC,CACHF,KAAK,CAACQ,MAAN,CAAa,UAASC,WAAT,EAAqB;AAClCH,IAAAA,IAAI,CAACG,WAAL,GAAmBA,WAAnB;AACA,WAAOH,IAAP;AACC,GAHD,CADG,CAAP;AAMH,C,CACD;AAEA;AACA;AACA;AACA;;;AAEA,MAAMI,UAAU,GAAG;AACf;AACAN,EAAAA,cAFe;AAGfC,EAAAA;AAHe,CAAnB;AAMA,eAAeK,UAAf","sourcesContent":["const apiKey = process.env.REACT_APP_MERRIAM_API_KEY;\nconst baseUrl = 'https://www.dictionaryapi.com/api/v3/references/collegiate/json/';\n// const collectionUrl = `${baseUrl}/jovial?key=${apiKey}`;\n\nconst handleAPIErrors = response => {\n\n}\n\nfunction prepWord(word){\n    return encodeURIComponent(word)\n  }\n  \nvar utils = {\n    prepWord: prepWord,\n}\n\nfunction getQueryParams(params){\n    params[\"api_key\"] = apiKey;\n        var pairs = Object.keys(params).map(function(key){\n            var result = key + \"=\" + params[key];\n            return result;\n        }) \n        var urlParams = pairs.reduce(function(prev,next){\n            return prev + \"&\" + next\n        })  \n    return urlParams\n}\n\nfunction prepareUrl(word, params){\n    var url = baseUrl + \"/\" + utils.prepWord(word) + \"?\" + getQueryParams(params);\n    return url\n}\n\n//start\nfunction callWord(word, params){\n    var url = prepareUrl(word, params);\n    return axios.get(url).then(function(response){\n      return response.data\n    })\n  }\n  \nfunction getDefinitions(word){\n    var params = {}\n    return callWord(word, params)\n}\n\nfunction getWordInfo(word){\n    var meta = {}\n    return axios.all([getDefinitions(word)]).then(\n        axios.spread(function(definitions){\n        meta.definitions = definitions;\n        return meta\n        })\n    )\n}\n//end\n\n// const index = () =>{\n//     return fetch(collectionUrl)\n//         .then(response=>response.json());\n// }\n\nconst MerriamAPI = {\n    // index,\n    getDefinitions,\n    getWordInfo\n}\n\nexport default MerriamAPI;"]},"metadata":{},"sourceType":"module"}